
002SampleApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000016d8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001a4  08001888  08001888  00011888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001a2c  08001a2c  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  08001a2c  08001a2c  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001a2c  08001a2c  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001a2c  08001a2c  00011a2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001a30  08001a30  00011a30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  08001a34  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  200000ac  08001ae0  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000dc  08001ae0  000200dc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ac8  00000000  00000000  000200dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003e9  00000000  00000000  00020ba4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00020f90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  000210c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000028f1  00000000  00000000  000211c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000150d  00000000  00000000  00023ab9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008a12  00000000  00000000  00024fc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002d9d8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ecc  00000000  00000000  0002da28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000ac 	.word	0x200000ac
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001870 	.word	0x08001870

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000b0 	.word	0x200000b0
 80001ec:	08001870 	.word	0x08001870

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b084      	sub	sp, #16
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800029a:	2300      	movs	r3, #0
 800029c:	60fb      	str	r3, [r7, #12]
 800029e:	e015      	b.n	80002cc <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 80002a0:	f000 fa66 	bl	8000770 <rand>
 80002a4:	4602      	mov	r2, r0
 80002a6:	68fb      	ldr	r3, [r7, #12]
 80002a8:	009b      	lsls	r3, r3, #2
 80002aa:	6879      	ldr	r1, [r7, #4]
 80002ac:	4419      	add	r1, r3
 80002ae:	4b0c      	ldr	r3, [pc, #48]	; (80002e0 <array_fill_numbers+0x50>)
 80002b0:	fb83 0302 	smull	r0, r3, r3, r2
 80002b4:	1198      	asrs	r0, r3, #6
 80002b6:	17d3      	asrs	r3, r2, #31
 80002b8:	1ac3      	subs	r3, r0, r3
 80002ba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002be:	fb00 f303 	mul.w	r3, r0, r3
 80002c2:	1ad3      	subs	r3, r2, r3
 80002c4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	3301      	adds	r3, #1
 80002ca:	60fb      	str	r3, [r7, #12]
 80002cc:	68fa      	ldr	r2, [r7, #12]
 80002ce:	683b      	ldr	r3, [r7, #0]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d3e5      	bcc.n	80002a0 <array_fill_numbers+0x10>
    }

}
 80002d4:	bf00      	nop
 80002d6:	bf00      	nop
 80002d8:	3710      	adds	r7, #16
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	10624dd3 	.word	0x10624dd3

080002e4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	b086      	sub	sp, #24
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	60f8      	str	r0, [r7, #12]
 80002ec:	60b9      	str	r1, [r7, #8]
 80002ee:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80002f0:	6879      	ldr	r1, [r7, #4]
 80002f2:	480e      	ldr	r0, [pc, #56]	; (800032c <display_numbers+0x48>)
 80002f4:	f000 fa0e 	bl	8000714 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00b      	b.n	8000316 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80002fe:	697b      	ldr	r3, [r7, #20]
 8000300:	009b      	lsls	r3, r3, #2
 8000302:	68fa      	ldr	r2, [r7, #12]
 8000304:	4413      	add	r3, r2
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	4619      	mov	r1, r3
 800030a:	4809      	ldr	r0, [pc, #36]	; (8000330 <display_numbers+0x4c>)
 800030c:	f000 fa02 	bl	8000714 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 8000310:	697b      	ldr	r3, [r7, #20]
 8000312:	3301      	adds	r3, #1
 8000314:	617b      	str	r3, [r7, #20]
 8000316:	697a      	ldr	r2, [r7, #20]
 8000318:	68bb      	ldr	r3, [r7, #8]
 800031a:	429a      	cmp	r2, r3
 800031c:	d3ef      	bcc.n	80002fe <display_numbers+0x1a>
    }

    printf("\n");
 800031e:	200a      	movs	r0, #10
 8000320:	f000 fa10 	bl	8000744 <putchar>
}
 8000324:	bf00      	nop
 8000326:	3718      	adds	r7, #24
 8000328:	46bd      	mov	sp, r7
 800032a:	bd80      	pop	{r7, pc}
 800032c:	08001888 	.word	0x08001888
 8000330:	0800188c 	.word	0x0800188c

08000334 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000334:	b480      	push	{r7}
 8000336:	b085      	sub	sp, #20
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
 800033c:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000344:	683b      	ldr	r3, [r7, #0]
 8000346:	681a      	ldr	r2, [r3, #0]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	601a      	str	r2, [r3, #0]
     *y=temp;
 800034c:	683b      	ldr	r3, [r7, #0]
 800034e:	68fa      	ldr	r2, [r7, #12]
 8000350:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000009;
     jump_addr();
#endif

     someData = 10;
 8000352:	4b04      	ldr	r3, [pc, #16]	; (8000364 <swap_numbers+0x30>)
 8000354:	220a      	movs	r2, #10
 8000356:	601a      	str	r2, [r3, #0]
}
 8000358:	bf00      	nop
 800035a:	3714      	adds	r7, #20
 800035c:	46bd      	mov	sp, r7
 800035e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000362:	4770      	bx	lr
 8000364:	20000044 	.word	0x20000044

08000368 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b086      	sub	sp, #24
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
 8000370:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000372:	2300      	movs	r3, #0
 8000374:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000376:	2300      	movs	r3, #0
 8000378:	617b      	str	r3, [r7, #20]
 800037a:	e02f      	b.n	80003dc <bubble_sort+0x74>
    {
        flag=0;
 800037c:	2300      	movs	r3, #0
 800037e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000380:	2300      	movs	r3, #0
 8000382:	613b      	str	r3, [r7, #16]
 8000384:	e01d      	b.n	80003c2 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000386:	693b      	ldr	r3, [r7, #16]
 8000388:	009b      	lsls	r3, r3, #2
 800038a:	687a      	ldr	r2, [r7, #4]
 800038c:	4413      	add	r3, r2
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	693b      	ldr	r3, [r7, #16]
 8000392:	3301      	adds	r3, #1
 8000394:	009b      	lsls	r3, r3, #2
 8000396:	6879      	ldr	r1, [r7, #4]
 8000398:	440b      	add	r3, r1
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	429a      	cmp	r2, r3
 800039e:	dd0d      	ble.n	80003bc <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003a0:	693b      	ldr	r3, [r7, #16]
 80003a2:	009b      	lsls	r3, r3, #2
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	18d0      	adds	r0, r2, r3
 80003a8:	693b      	ldr	r3, [r7, #16]
 80003aa:	3301      	adds	r3, #1
 80003ac:	009b      	lsls	r3, r3, #2
 80003ae:	687a      	ldr	r2, [r7, #4]
 80003b0:	4413      	add	r3, r2
 80003b2:	4619      	mov	r1, r3
 80003b4:	f7ff ffbe 	bl	8000334 <swap_numbers>
                flag=1;
 80003b8:	2301      	movs	r3, #1
 80003ba:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 80003bc:	693b      	ldr	r3, [r7, #16]
 80003be:	3301      	adds	r3, #1
 80003c0:	613b      	str	r3, [r7, #16]
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	683a      	ldr	r2, [r7, #0]
 80003c6:	1ad3      	subs	r3, r2, r3
 80003c8:	1e5a      	subs	r2, r3, #1
 80003ca:	693b      	ldr	r3, [r7, #16]
 80003cc:	429a      	cmp	r2, r3
 80003ce:	d8da      	bhi.n	8000386 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80003d0:	68fb      	ldr	r3, [r7, #12]
 80003d2:	2b00      	cmp	r3, #0
 80003d4:	d008      	beq.n	80003e8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	3301      	adds	r3, #1
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	683b      	ldr	r3, [r7, #0]
 80003de:	1e5a      	subs	r2, r3, #1
 80003e0:	697b      	ldr	r3, [r7, #20]
 80003e2:	429a      	cmp	r2, r3
 80003e4:	d8ca      	bhi.n	800037c <bubble_sort+0x14>
            break;
    }
}
 80003e6:	e000      	b.n	80003ea <bubble_sort+0x82>
            break;
 80003e8:	bf00      	nop
}
 80003ea:	bf00      	nop
 80003ec:	3718      	adds	r7, #24
 80003ee:	46bd      	mov	sp, r7
 80003f0:	bd80      	pop	{r7, pc}

080003f2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80003f2:	b480      	push	{r7}
 80003f4:	b087      	sub	sp, #28
 80003f6:	af00      	add	r7, sp, #0
 80003f8:	6078      	str	r0, [r7, #4]
 80003fa:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80003fc:	2301      	movs	r3, #1
 80003fe:	617b      	str	r3, [r7, #20]
 8000400:	e02c      	b.n	800045c <insertion_sort+0x6a>
     {
         j=i-1;
 8000402:	697b      	ldr	r3, [r7, #20]
 8000404:	3b01      	subs	r3, #1
 8000406:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	009b      	lsls	r3, r3, #2
 800040c:	687a      	ldr	r2, [r7, #4]
 800040e:	4413      	add	r3, r2
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 8000414:	e00d      	b.n	8000432 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 8000416:	693b      	ldr	r3, [r7, #16]
 8000418:	009b      	lsls	r3, r3, #2
 800041a:	687a      	ldr	r2, [r7, #4]
 800041c:	441a      	add	r2, r3
 800041e:	693b      	ldr	r3, [r7, #16]
 8000420:	3301      	adds	r3, #1
 8000422:	009b      	lsls	r3, r3, #2
 8000424:	6879      	ldr	r1, [r7, #4]
 8000426:	440b      	add	r3, r1
 8000428:	6812      	ldr	r2, [r2, #0]
 800042a:	601a      	str	r2, [r3, #0]
             j--;
 800042c:	693b      	ldr	r3, [r7, #16]
 800042e:	3b01      	subs	r3, #1
 8000430:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000432:	693b      	ldr	r3, [r7, #16]
 8000434:	2b00      	cmp	r3, #0
 8000436:	db07      	blt.n	8000448 <insertion_sort+0x56>
 8000438:	693b      	ldr	r3, [r7, #16]
 800043a:	009b      	lsls	r3, r3, #2
 800043c:	687a      	ldr	r2, [r7, #4]
 800043e:	4413      	add	r3, r2
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	68fa      	ldr	r2, [r7, #12]
 8000444:	429a      	cmp	r2, r3
 8000446:	dbe6      	blt.n	8000416 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000448:	693b      	ldr	r3, [r7, #16]
 800044a:	3301      	adds	r3, #1
 800044c:	009b      	lsls	r3, r3, #2
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	4413      	add	r3, r2
 8000452:	68fa      	ldr	r2, [r7, #12]
 8000454:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000456:	697b      	ldr	r3, [r7, #20]
 8000458:	3301      	adds	r3, #1
 800045a:	617b      	str	r3, [r7, #20]
 800045c:	697b      	ldr	r3, [r7, #20]
 800045e:	683a      	ldr	r2, [r7, #0]
 8000460:	429a      	cmp	r2, r3
 8000462:	d8ce      	bhi.n	8000402 <insertion_sort+0x10>
     }


}
 8000464:	bf00      	nop
 8000466:	bf00      	nop
 8000468:	371c      	adds	r7, #28
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr
	...

08000474 <main>:



int main()
{
 8000474:	b580      	push	{r7, lr}
 8000476:	b082      	sub	sp, #8
 8000478:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800047a:	2311      	movs	r3, #17
 800047c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800047e:	6879      	ldr	r1, [r7, #4]
 8000480:	4813      	ldr	r0, [pc, #76]	; (80004d0 <main+0x5c>)
 8000482:	f7ff ff05 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000486:	4a13      	ldr	r2, [pc, #76]	; (80004d4 <main+0x60>)
 8000488:	6879      	ldr	r1, [r7, #4]
 800048a:	4811      	ldr	r0, [pc, #68]	; (80004d0 <main+0x5c>)
 800048c:	f7ff ff2a 	bl	80002e4 <display_numbers>

    bubble_sort(numbers,len);
 8000490:	6879      	ldr	r1, [r7, #4]
 8000492:	480f      	ldr	r0, [pc, #60]	; (80004d0 <main+0x5c>)
 8000494:	f7ff ff68 	bl	8000368 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000498:	4a0f      	ldr	r2, [pc, #60]	; (80004d8 <main+0x64>)
 800049a:	6879      	ldr	r1, [r7, #4]
 800049c:	480c      	ldr	r0, [pc, #48]	; (80004d0 <main+0x5c>)
 800049e:	f7ff ff21 	bl	80002e4 <display_numbers>

    array_fill_numbers(numbers,len);
 80004a2:	6879      	ldr	r1, [r7, #4]
 80004a4:	480a      	ldr	r0, [pc, #40]	; (80004d0 <main+0x5c>)
 80004a6:	f7ff fef3 	bl	8000290 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 80004aa:	4a0c      	ldr	r2, [pc, #48]	; (80004dc <main+0x68>)
 80004ac:	6879      	ldr	r1, [r7, #4]
 80004ae:	4808      	ldr	r0, [pc, #32]	; (80004d0 <main+0x5c>)
 80004b0:	f7ff ff18 	bl	80002e4 <display_numbers>

    insertion_sort(numbers,len);
 80004b4:	6879      	ldr	r1, [r7, #4]
 80004b6:	4806      	ldr	r0, [pc, #24]	; (80004d0 <main+0x5c>)
 80004b8:	f7ff ff9b 	bl	80003f2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 80004bc:	4a08      	ldr	r2, [pc, #32]	; (80004e0 <main+0x6c>)
 80004be:	6879      	ldr	r1, [r7, #4]
 80004c0:	4803      	ldr	r0, [pc, #12]	; (80004d0 <main+0x5c>)
 80004c2:	f7ff ff0f 	bl	80002e4 <display_numbers>



    return 0;
 80004c6:	2300      	movs	r3, #0
}
 80004c8:	4618      	mov	r0, r3
 80004ca:	3708      	adds	r7, #8
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bd80      	pop	{r7, pc}
 80004d0:	20000000 	.word	0x20000000
 80004d4:	08001894 	.word	0x08001894
 80004d8:	080018a8 	.word	0x080018a8
 80004dc:	080018bc 	.word	0x080018bc
 80004e0:	080018d0 	.word	0x080018d0

080004e4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80004e4:	b480      	push	{r7}
 80004e6:	af00      	add	r7, sp, #0
	return 1;
 80004e8:	2301      	movs	r3, #1
}
 80004ea:	4618      	mov	r0, r3
 80004ec:	46bd      	mov	sp, r7
 80004ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f2:	4770      	bx	lr

080004f4 <_kill>:

int _kill(int pid, int sig)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b082      	sub	sp, #8
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80004fe:	f000 f8d7 	bl	80006b0 <__errno>
 8000502:	4603      	mov	r3, r0
 8000504:	2216      	movs	r2, #22
 8000506:	601a      	str	r2, [r3, #0]
	return -1;
 8000508:	f04f 33ff 	mov.w	r3, #4294967295
}
 800050c:	4618      	mov	r0, r3
 800050e:	3708      	adds	r7, #8
 8000510:	46bd      	mov	sp, r7
 8000512:	bd80      	pop	{r7, pc}

08000514 <_exit>:

void _exit (int status)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b082      	sub	sp, #8
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800051c:	f04f 31ff 	mov.w	r1, #4294967295
 8000520:	6878      	ldr	r0, [r7, #4]
 8000522:	f7ff ffe7 	bl	80004f4 <_kill>
	while (1) {}		/* Make sure we hang here */
 8000526:	e7fe      	b.n	8000526 <_exit+0x12>

08000528 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000528:	b580      	push	{r7, lr}
 800052a:	b086      	sub	sp, #24
 800052c:	af00      	add	r7, sp, #0
 800052e:	60f8      	str	r0, [r7, #12]
 8000530:	60b9      	str	r1, [r7, #8]
 8000532:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000534:	2300      	movs	r3, #0
 8000536:	617b      	str	r3, [r7, #20]
 8000538:	e00a      	b.n	8000550 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800053a:	f3af 8000 	nop.w
 800053e:	4601      	mov	r1, r0
 8000540:	68bb      	ldr	r3, [r7, #8]
 8000542:	1c5a      	adds	r2, r3, #1
 8000544:	60ba      	str	r2, [r7, #8]
 8000546:	b2ca      	uxtb	r2, r1
 8000548:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800054a:	697b      	ldr	r3, [r7, #20]
 800054c:	3301      	adds	r3, #1
 800054e:	617b      	str	r3, [r7, #20]
 8000550:	697a      	ldr	r2, [r7, #20]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	429a      	cmp	r2, r3
 8000556:	dbf0      	blt.n	800053a <_read+0x12>
	}

return len;
 8000558:	687b      	ldr	r3, [r7, #4]
}
 800055a:	4618      	mov	r0, r3
 800055c:	3718      	adds	r7, #24
 800055e:	46bd      	mov	sp, r7
 8000560:	bd80      	pop	{r7, pc}

08000562 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000562:	b580      	push	{r7, lr}
 8000564:	b086      	sub	sp, #24
 8000566:	af00      	add	r7, sp, #0
 8000568:	60f8      	str	r0, [r7, #12]
 800056a:	60b9      	str	r1, [r7, #8]
 800056c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800056e:	2300      	movs	r3, #0
 8000570:	617b      	str	r3, [r7, #20]
 8000572:	e009      	b.n	8000588 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000574:	68bb      	ldr	r3, [r7, #8]
 8000576:	1c5a      	adds	r2, r3, #1
 8000578:	60ba      	str	r2, [r7, #8]
 800057a:	781b      	ldrb	r3, [r3, #0]
 800057c:	4618      	mov	r0, r3
 800057e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000582:	697b      	ldr	r3, [r7, #20]
 8000584:	3301      	adds	r3, #1
 8000586:	617b      	str	r3, [r7, #20]
 8000588:	697a      	ldr	r2, [r7, #20]
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	429a      	cmp	r2, r3
 800058e:	dbf1      	blt.n	8000574 <_write+0x12>
	}
	return len;
 8000590:	687b      	ldr	r3, [r7, #4]
}
 8000592:	4618      	mov	r0, r3
 8000594:	3718      	adds	r7, #24
 8000596:	46bd      	mov	sp, r7
 8000598:	bd80      	pop	{r7, pc}

0800059a <_close>:

int _close(int file)
{
 800059a:	b480      	push	{r7}
 800059c:	b083      	sub	sp, #12
 800059e:	af00      	add	r7, sp, #0
 80005a0:	6078      	str	r0, [r7, #4]
	return -1;
 80005a2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005a6:	4618      	mov	r0, r3
 80005a8:	370c      	adds	r7, #12
 80005aa:	46bd      	mov	sp, r7
 80005ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b0:	4770      	bx	lr

080005b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005b2:	b480      	push	{r7}
 80005b4:	b083      	sub	sp, #12
 80005b6:	af00      	add	r7, sp, #0
 80005b8:	6078      	str	r0, [r7, #4]
 80005ba:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80005bc:	683b      	ldr	r3, [r7, #0]
 80005be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005c2:	605a      	str	r2, [r3, #4]
	return 0;
 80005c4:	2300      	movs	r3, #0
}
 80005c6:	4618      	mov	r0, r3
 80005c8:	370c      	adds	r7, #12
 80005ca:	46bd      	mov	sp, r7
 80005cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d0:	4770      	bx	lr

080005d2 <_isatty>:

int _isatty(int file)
{
 80005d2:	b480      	push	{r7}
 80005d4:	b083      	sub	sp, #12
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	6078      	str	r0, [r7, #4]
	return 1;
 80005da:	2301      	movs	r3, #1
}
 80005dc:	4618      	mov	r0, r3
 80005de:	370c      	adds	r7, #12
 80005e0:	46bd      	mov	sp, r7
 80005e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e6:	4770      	bx	lr

080005e8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005e8:	b480      	push	{r7}
 80005ea:	b085      	sub	sp, #20
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	60f8      	str	r0, [r7, #12]
 80005f0:	60b9      	str	r1, [r7, #8]
 80005f2:	607a      	str	r2, [r7, #4]
	return 0;
 80005f4:	2300      	movs	r3, #0
}
 80005f6:	4618      	mov	r0, r3
 80005f8:	3714      	adds	r7, #20
 80005fa:	46bd      	mov	sp, r7
 80005fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000600:	4770      	bx	lr
	...

08000604 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000604:	b580      	push	{r7, lr}
 8000606:	b084      	sub	sp, #16
 8000608:	af00      	add	r7, sp, #0
 800060a:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800060c:	4b11      	ldr	r3, [pc, #68]	; (8000654 <_sbrk+0x50>)
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	2b00      	cmp	r3, #0
 8000612:	d102      	bne.n	800061a <_sbrk+0x16>
		heap_end = &end;
 8000614:	4b0f      	ldr	r3, [pc, #60]	; (8000654 <_sbrk+0x50>)
 8000616:	4a10      	ldr	r2, [pc, #64]	; (8000658 <_sbrk+0x54>)
 8000618:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800061a:	4b0e      	ldr	r3, [pc, #56]	; (8000654 <_sbrk+0x50>)
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000620:	4b0c      	ldr	r3, [pc, #48]	; (8000654 <_sbrk+0x50>)
 8000622:	681a      	ldr	r2, [r3, #0]
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	4413      	add	r3, r2
 8000628:	466a      	mov	r2, sp
 800062a:	4293      	cmp	r3, r2
 800062c:	d907      	bls.n	800063e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800062e:	f000 f83f 	bl	80006b0 <__errno>
 8000632:	4603      	mov	r3, r0
 8000634:	220c      	movs	r2, #12
 8000636:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8000638:	f04f 33ff 	mov.w	r3, #4294967295
 800063c:	e006      	b.n	800064c <_sbrk+0x48>
	}

	heap_end += incr;
 800063e:	4b05      	ldr	r3, [pc, #20]	; (8000654 <_sbrk+0x50>)
 8000640:	681a      	ldr	r2, [r3, #0]
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	4413      	add	r3, r2
 8000646:	4a03      	ldr	r2, [pc, #12]	; (8000654 <_sbrk+0x50>)
 8000648:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800064a:	68fb      	ldr	r3, [r7, #12]
}
 800064c:	4618      	mov	r0, r3
 800064e:	3710      	adds	r7, #16
 8000650:	46bd      	mov	sp, r7
 8000652:	bd80      	pop	{r7, pc}
 8000654:	200000c8 	.word	0x200000c8
 8000658:	200000e0 	.word	0x200000e0

0800065c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800065c:	480d      	ldr	r0, [pc, #52]	; (8000694 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800065e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000660:	480d      	ldr	r0, [pc, #52]	; (8000698 <LoopForever+0x6>)
  ldr r1, =_edata
 8000662:	490e      	ldr	r1, [pc, #56]	; (800069c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000664:	4a0e      	ldr	r2, [pc, #56]	; (80006a0 <LoopForever+0xe>)
  movs r3, #0
 8000666:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000668:	e002      	b.n	8000670 <LoopCopyDataInit>

0800066a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800066a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800066c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800066e:	3304      	adds	r3, #4

08000670 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000670:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000672:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000674:	d3f9      	bcc.n	800066a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000676:	4a0b      	ldr	r2, [pc, #44]	; (80006a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000678:	4c0b      	ldr	r4, [pc, #44]	; (80006a8 <LoopForever+0x16>)
  movs r3, #0
 800067a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800067c:	e001      	b.n	8000682 <LoopFillZerobss>

0800067e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800067e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000680:	3204      	adds	r2, #4

08000682 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000682:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000684:	d3fb      	bcc.n	800067e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000686:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800068a:	f000 f817 	bl	80006bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800068e:	f7ff fef1 	bl	8000474 <main>

08000692 <LoopForever>:

LoopForever:
    b LoopForever
 8000692:	e7fe      	b.n	8000692 <LoopForever>
  ldr   r0, =_estack
 8000694:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000698:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800069c:	200000ac 	.word	0x200000ac
  ldr r2, =_sidata
 80006a0:	08001a34 	.word	0x08001a34
  ldr r2, =_sbss
 80006a4:	200000ac 	.word	0x200000ac
  ldr r4, =_ebss
 80006a8:	200000dc 	.word	0x200000dc

080006ac <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006ac:	e7fe      	b.n	80006ac <ADC_IRQHandler>
	...

080006b0 <__errno>:
 80006b0:	4b01      	ldr	r3, [pc, #4]	; (80006b8 <__errno+0x8>)
 80006b2:	6818      	ldr	r0, [r3, #0]
 80006b4:	4770      	bx	lr
 80006b6:	bf00      	nop
 80006b8:	20000048 	.word	0x20000048

080006bc <__libc_init_array>:
 80006bc:	b570      	push	{r4, r5, r6, lr}
 80006be:	4d0d      	ldr	r5, [pc, #52]	; (80006f4 <__libc_init_array+0x38>)
 80006c0:	4c0d      	ldr	r4, [pc, #52]	; (80006f8 <__libc_init_array+0x3c>)
 80006c2:	1b64      	subs	r4, r4, r5
 80006c4:	10a4      	asrs	r4, r4, #2
 80006c6:	2600      	movs	r6, #0
 80006c8:	42a6      	cmp	r6, r4
 80006ca:	d109      	bne.n	80006e0 <__libc_init_array+0x24>
 80006cc:	4d0b      	ldr	r5, [pc, #44]	; (80006fc <__libc_init_array+0x40>)
 80006ce:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <__libc_init_array+0x44>)
 80006d0:	f001 f8ce 	bl	8001870 <_init>
 80006d4:	1b64      	subs	r4, r4, r5
 80006d6:	10a4      	asrs	r4, r4, #2
 80006d8:	2600      	movs	r6, #0
 80006da:	42a6      	cmp	r6, r4
 80006dc:	d105      	bne.n	80006ea <__libc_init_array+0x2e>
 80006de:	bd70      	pop	{r4, r5, r6, pc}
 80006e0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006e4:	4798      	blx	r3
 80006e6:	3601      	adds	r6, #1
 80006e8:	e7ee      	b.n	80006c8 <__libc_init_array+0xc>
 80006ea:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ee:	4798      	blx	r3
 80006f0:	3601      	adds	r6, #1
 80006f2:	e7f2      	b.n	80006da <__libc_init_array+0x1e>
 80006f4:	08001a2c 	.word	0x08001a2c
 80006f8:	08001a2c 	.word	0x08001a2c
 80006fc:	08001a2c 	.word	0x08001a2c
 8000700:	08001a30 	.word	0x08001a30

08000704 <memset>:
 8000704:	4402      	add	r2, r0
 8000706:	4603      	mov	r3, r0
 8000708:	4293      	cmp	r3, r2
 800070a:	d100      	bne.n	800070e <memset+0xa>
 800070c:	4770      	bx	lr
 800070e:	f803 1b01 	strb.w	r1, [r3], #1
 8000712:	e7f9      	b.n	8000708 <memset+0x4>

08000714 <iprintf>:
 8000714:	b40f      	push	{r0, r1, r2, r3}
 8000716:	4b0a      	ldr	r3, [pc, #40]	; (8000740 <iprintf+0x2c>)
 8000718:	b513      	push	{r0, r1, r4, lr}
 800071a:	681c      	ldr	r4, [r3, #0]
 800071c:	b124      	cbz	r4, 8000728 <iprintf+0x14>
 800071e:	69a3      	ldr	r3, [r4, #24]
 8000720:	b913      	cbnz	r3, 8000728 <iprintf+0x14>
 8000722:	4620      	mov	r0, r4
 8000724:	f000 f8d8 	bl	80008d8 <__sinit>
 8000728:	ab05      	add	r3, sp, #20
 800072a:	9a04      	ldr	r2, [sp, #16]
 800072c:	68a1      	ldr	r1, [r4, #8]
 800072e:	9301      	str	r3, [sp, #4]
 8000730:	4620      	mov	r0, r4
 8000732:	f000 fa95 	bl	8000c60 <_vfiprintf_r>
 8000736:	b002      	add	sp, #8
 8000738:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800073c:	b004      	add	sp, #16
 800073e:	4770      	bx	lr
 8000740:	20000048 	.word	0x20000048

08000744 <putchar>:
 8000744:	4b09      	ldr	r3, [pc, #36]	; (800076c <putchar+0x28>)
 8000746:	b513      	push	{r0, r1, r4, lr}
 8000748:	681c      	ldr	r4, [r3, #0]
 800074a:	4601      	mov	r1, r0
 800074c:	b134      	cbz	r4, 800075c <putchar+0x18>
 800074e:	69a3      	ldr	r3, [r4, #24]
 8000750:	b923      	cbnz	r3, 800075c <putchar+0x18>
 8000752:	9001      	str	r0, [sp, #4]
 8000754:	4620      	mov	r0, r4
 8000756:	f000 f8bf 	bl	80008d8 <__sinit>
 800075a:	9901      	ldr	r1, [sp, #4]
 800075c:	68a2      	ldr	r2, [r4, #8]
 800075e:	4620      	mov	r0, r4
 8000760:	b002      	add	sp, #8
 8000762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000766:	f000 bd3f 	b.w	80011e8 <_putc_r>
 800076a:	bf00      	nop
 800076c:	20000048 	.word	0x20000048

08000770 <rand>:
 8000770:	4b16      	ldr	r3, [pc, #88]	; (80007cc <rand+0x5c>)
 8000772:	b510      	push	{r4, lr}
 8000774:	681c      	ldr	r4, [r3, #0]
 8000776:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000778:	b9b3      	cbnz	r3, 80007a8 <rand+0x38>
 800077a:	2018      	movs	r0, #24
 800077c:	f000 f95e 	bl	8000a3c <malloc>
 8000780:	63a0      	str	r0, [r4, #56]	; 0x38
 8000782:	b928      	cbnz	r0, 8000790 <rand+0x20>
 8000784:	4602      	mov	r2, r0
 8000786:	4b12      	ldr	r3, [pc, #72]	; (80007d0 <rand+0x60>)
 8000788:	4812      	ldr	r0, [pc, #72]	; (80007d4 <rand+0x64>)
 800078a:	214e      	movs	r1, #78	; 0x4e
 800078c:	f000 f82e 	bl	80007ec <__assert_func>
 8000790:	4a11      	ldr	r2, [pc, #68]	; (80007d8 <rand+0x68>)
 8000792:	4b12      	ldr	r3, [pc, #72]	; (80007dc <rand+0x6c>)
 8000794:	e9c0 2300 	strd	r2, r3, [r0]
 8000798:	4b11      	ldr	r3, [pc, #68]	; (80007e0 <rand+0x70>)
 800079a:	6083      	str	r3, [r0, #8]
 800079c:	230b      	movs	r3, #11
 800079e:	8183      	strh	r3, [r0, #12]
 80007a0:	2201      	movs	r2, #1
 80007a2:	2300      	movs	r3, #0
 80007a4:	e9c0 2304 	strd	r2, r3, [r0, #16]
 80007a8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 80007aa:	4a0e      	ldr	r2, [pc, #56]	; (80007e4 <rand+0x74>)
 80007ac:	6920      	ldr	r0, [r4, #16]
 80007ae:	6963      	ldr	r3, [r4, #20]
 80007b0:	490d      	ldr	r1, [pc, #52]	; (80007e8 <rand+0x78>)
 80007b2:	4342      	muls	r2, r0
 80007b4:	fb01 2203 	mla	r2, r1, r3, r2
 80007b8:	fba0 0101 	umull	r0, r1, r0, r1
 80007bc:	1c43      	adds	r3, r0, #1
 80007be:	eb42 0001 	adc.w	r0, r2, r1
 80007c2:	e9c4 3004 	strd	r3, r0, [r4, #16]
 80007c6:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80007ca:	bd10      	pop	{r4, pc}
 80007cc:	20000048 	.word	0x20000048
 80007d0:	080018e8 	.word	0x080018e8
 80007d4:	080018ff 	.word	0x080018ff
 80007d8:	abcd330e 	.word	0xabcd330e
 80007dc:	e66d1234 	.word	0xe66d1234
 80007e0:	0005deec 	.word	0x0005deec
 80007e4:	5851f42d 	.word	0x5851f42d
 80007e8:	4c957f2d 	.word	0x4c957f2d

080007ec <__assert_func>:
 80007ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80007ee:	4614      	mov	r4, r2
 80007f0:	461a      	mov	r2, r3
 80007f2:	4b09      	ldr	r3, [pc, #36]	; (8000818 <__assert_func+0x2c>)
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	4605      	mov	r5, r0
 80007f8:	68d8      	ldr	r0, [r3, #12]
 80007fa:	b14c      	cbz	r4, 8000810 <__assert_func+0x24>
 80007fc:	4b07      	ldr	r3, [pc, #28]	; (800081c <__assert_func+0x30>)
 80007fe:	9100      	str	r1, [sp, #0]
 8000800:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000804:	4906      	ldr	r1, [pc, #24]	; (8000820 <__assert_func+0x34>)
 8000806:	462b      	mov	r3, r5
 8000808:	f000 f8e4 	bl	80009d4 <fiprintf>
 800080c:	f000 fe5a 	bl	80014c4 <abort>
 8000810:	4b04      	ldr	r3, [pc, #16]	; (8000824 <__assert_func+0x38>)
 8000812:	461c      	mov	r4, r3
 8000814:	e7f3      	b.n	80007fe <__assert_func+0x12>
 8000816:	bf00      	nop
 8000818:	20000048 	.word	0x20000048
 800081c:	0800195a 	.word	0x0800195a
 8000820:	08001967 	.word	0x08001967
 8000824:	08001995 	.word	0x08001995

08000828 <std>:
 8000828:	2300      	movs	r3, #0
 800082a:	b510      	push	{r4, lr}
 800082c:	4604      	mov	r4, r0
 800082e:	e9c0 3300 	strd	r3, r3, [r0]
 8000832:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000836:	6083      	str	r3, [r0, #8]
 8000838:	8181      	strh	r1, [r0, #12]
 800083a:	6643      	str	r3, [r0, #100]	; 0x64
 800083c:	81c2      	strh	r2, [r0, #14]
 800083e:	6183      	str	r3, [r0, #24]
 8000840:	4619      	mov	r1, r3
 8000842:	2208      	movs	r2, #8
 8000844:	305c      	adds	r0, #92	; 0x5c
 8000846:	f7ff ff5d 	bl	8000704 <memset>
 800084a:	4b05      	ldr	r3, [pc, #20]	; (8000860 <std+0x38>)
 800084c:	6263      	str	r3, [r4, #36]	; 0x24
 800084e:	4b05      	ldr	r3, [pc, #20]	; (8000864 <std+0x3c>)
 8000850:	62a3      	str	r3, [r4, #40]	; 0x28
 8000852:	4b05      	ldr	r3, [pc, #20]	; (8000868 <std+0x40>)
 8000854:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000856:	4b05      	ldr	r3, [pc, #20]	; (800086c <std+0x44>)
 8000858:	6224      	str	r4, [r4, #32]
 800085a:	6323      	str	r3, [r4, #48]	; 0x30
 800085c:	bd10      	pop	{r4, pc}
 800085e:	bf00      	nop
 8000860:	08001299 	.word	0x08001299
 8000864:	080012bb 	.word	0x080012bb
 8000868:	080012f3 	.word	0x080012f3
 800086c:	08001317 	.word	0x08001317

08000870 <_cleanup_r>:
 8000870:	4901      	ldr	r1, [pc, #4]	; (8000878 <_cleanup_r+0x8>)
 8000872:	f000 b8c1 	b.w	80009f8 <_fwalk_reent>
 8000876:	bf00      	nop
 8000878:	08001601 	.word	0x08001601

0800087c <__sfmoreglue>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	2268      	movs	r2, #104	; 0x68
 8000880:	1e4d      	subs	r5, r1, #1
 8000882:	4355      	muls	r5, r2
 8000884:	460e      	mov	r6, r1
 8000886:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800088a:	f000 f94b 	bl	8000b24 <_malloc_r>
 800088e:	4604      	mov	r4, r0
 8000890:	b140      	cbz	r0, 80008a4 <__sfmoreglue+0x28>
 8000892:	2100      	movs	r1, #0
 8000894:	e9c0 1600 	strd	r1, r6, [r0]
 8000898:	300c      	adds	r0, #12
 800089a:	60a0      	str	r0, [r4, #8]
 800089c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008a0:	f7ff ff30 	bl	8000704 <memset>
 80008a4:	4620      	mov	r0, r4
 80008a6:	bd70      	pop	{r4, r5, r6, pc}

080008a8 <__sfp_lock_acquire>:
 80008a8:	4801      	ldr	r0, [pc, #4]	; (80008b0 <__sfp_lock_acquire+0x8>)
 80008aa:	f000 b8c5 	b.w	8000a38 <__retarget_lock_acquire_recursive>
 80008ae:	bf00      	nop
 80008b0:	200000cd 	.word	0x200000cd

080008b4 <__sfp_lock_release>:
 80008b4:	4801      	ldr	r0, [pc, #4]	; (80008bc <__sfp_lock_release+0x8>)
 80008b6:	f000 b8c0 	b.w	8000a3a <__retarget_lock_release_recursive>
 80008ba:	bf00      	nop
 80008bc:	200000cd 	.word	0x200000cd

080008c0 <__sinit_lock_acquire>:
 80008c0:	4801      	ldr	r0, [pc, #4]	; (80008c8 <__sinit_lock_acquire+0x8>)
 80008c2:	f000 b8b9 	b.w	8000a38 <__retarget_lock_acquire_recursive>
 80008c6:	bf00      	nop
 80008c8:	200000ce 	.word	0x200000ce

080008cc <__sinit_lock_release>:
 80008cc:	4801      	ldr	r0, [pc, #4]	; (80008d4 <__sinit_lock_release+0x8>)
 80008ce:	f000 b8b4 	b.w	8000a3a <__retarget_lock_release_recursive>
 80008d2:	bf00      	nop
 80008d4:	200000ce 	.word	0x200000ce

080008d8 <__sinit>:
 80008d8:	b510      	push	{r4, lr}
 80008da:	4604      	mov	r4, r0
 80008dc:	f7ff fff0 	bl	80008c0 <__sinit_lock_acquire>
 80008e0:	69a3      	ldr	r3, [r4, #24]
 80008e2:	b11b      	cbz	r3, 80008ec <__sinit+0x14>
 80008e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008e8:	f7ff bff0 	b.w	80008cc <__sinit_lock_release>
 80008ec:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008f0:	6523      	str	r3, [r4, #80]	; 0x50
 80008f2:	4b13      	ldr	r3, [pc, #76]	; (8000940 <__sinit+0x68>)
 80008f4:	4a13      	ldr	r2, [pc, #76]	; (8000944 <__sinit+0x6c>)
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	62a2      	str	r2, [r4, #40]	; 0x28
 80008fa:	42a3      	cmp	r3, r4
 80008fc:	bf04      	itt	eq
 80008fe:	2301      	moveq	r3, #1
 8000900:	61a3      	streq	r3, [r4, #24]
 8000902:	4620      	mov	r0, r4
 8000904:	f000 f820 	bl	8000948 <__sfp>
 8000908:	6060      	str	r0, [r4, #4]
 800090a:	4620      	mov	r0, r4
 800090c:	f000 f81c 	bl	8000948 <__sfp>
 8000910:	60a0      	str	r0, [r4, #8]
 8000912:	4620      	mov	r0, r4
 8000914:	f000 f818 	bl	8000948 <__sfp>
 8000918:	2200      	movs	r2, #0
 800091a:	60e0      	str	r0, [r4, #12]
 800091c:	2104      	movs	r1, #4
 800091e:	6860      	ldr	r0, [r4, #4]
 8000920:	f7ff ff82 	bl	8000828 <std>
 8000924:	68a0      	ldr	r0, [r4, #8]
 8000926:	2201      	movs	r2, #1
 8000928:	2109      	movs	r1, #9
 800092a:	f7ff ff7d 	bl	8000828 <std>
 800092e:	68e0      	ldr	r0, [r4, #12]
 8000930:	2202      	movs	r2, #2
 8000932:	2112      	movs	r1, #18
 8000934:	f7ff ff78 	bl	8000828 <std>
 8000938:	2301      	movs	r3, #1
 800093a:	61a3      	str	r3, [r4, #24]
 800093c:	e7d2      	b.n	80008e4 <__sinit+0xc>
 800093e:	bf00      	nop
 8000940:	080018e4 	.word	0x080018e4
 8000944:	08000871 	.word	0x08000871

08000948 <__sfp>:
 8000948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800094a:	4607      	mov	r7, r0
 800094c:	f7ff ffac 	bl	80008a8 <__sfp_lock_acquire>
 8000950:	4b1e      	ldr	r3, [pc, #120]	; (80009cc <__sfp+0x84>)
 8000952:	681e      	ldr	r6, [r3, #0]
 8000954:	69b3      	ldr	r3, [r6, #24]
 8000956:	b913      	cbnz	r3, 800095e <__sfp+0x16>
 8000958:	4630      	mov	r0, r6
 800095a:	f7ff ffbd 	bl	80008d8 <__sinit>
 800095e:	3648      	adds	r6, #72	; 0x48
 8000960:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000964:	3b01      	subs	r3, #1
 8000966:	d503      	bpl.n	8000970 <__sfp+0x28>
 8000968:	6833      	ldr	r3, [r6, #0]
 800096a:	b30b      	cbz	r3, 80009b0 <__sfp+0x68>
 800096c:	6836      	ldr	r6, [r6, #0]
 800096e:	e7f7      	b.n	8000960 <__sfp+0x18>
 8000970:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000974:	b9d5      	cbnz	r5, 80009ac <__sfp+0x64>
 8000976:	4b16      	ldr	r3, [pc, #88]	; (80009d0 <__sfp+0x88>)
 8000978:	60e3      	str	r3, [r4, #12]
 800097a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800097e:	6665      	str	r5, [r4, #100]	; 0x64
 8000980:	f000 f859 	bl	8000a36 <__retarget_lock_init_recursive>
 8000984:	f7ff ff96 	bl	80008b4 <__sfp_lock_release>
 8000988:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800098c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000990:	6025      	str	r5, [r4, #0]
 8000992:	61a5      	str	r5, [r4, #24]
 8000994:	2208      	movs	r2, #8
 8000996:	4629      	mov	r1, r5
 8000998:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800099c:	f7ff feb2 	bl	8000704 <memset>
 80009a0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009a4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009a8:	4620      	mov	r0, r4
 80009aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009ac:	3468      	adds	r4, #104	; 0x68
 80009ae:	e7d9      	b.n	8000964 <__sfp+0x1c>
 80009b0:	2104      	movs	r1, #4
 80009b2:	4638      	mov	r0, r7
 80009b4:	f7ff ff62 	bl	800087c <__sfmoreglue>
 80009b8:	4604      	mov	r4, r0
 80009ba:	6030      	str	r0, [r6, #0]
 80009bc:	2800      	cmp	r0, #0
 80009be:	d1d5      	bne.n	800096c <__sfp+0x24>
 80009c0:	f7ff ff78 	bl	80008b4 <__sfp_lock_release>
 80009c4:	230c      	movs	r3, #12
 80009c6:	603b      	str	r3, [r7, #0]
 80009c8:	e7ee      	b.n	80009a8 <__sfp+0x60>
 80009ca:	bf00      	nop
 80009cc:	080018e4 	.word	0x080018e4
 80009d0:	ffff0001 	.word	0xffff0001

080009d4 <fiprintf>:
 80009d4:	b40e      	push	{r1, r2, r3}
 80009d6:	b503      	push	{r0, r1, lr}
 80009d8:	4601      	mov	r1, r0
 80009da:	ab03      	add	r3, sp, #12
 80009dc:	4805      	ldr	r0, [pc, #20]	; (80009f4 <fiprintf+0x20>)
 80009de:	f853 2b04 	ldr.w	r2, [r3], #4
 80009e2:	6800      	ldr	r0, [r0, #0]
 80009e4:	9301      	str	r3, [sp, #4]
 80009e6:	f000 f93b 	bl	8000c60 <_vfiprintf_r>
 80009ea:	b002      	add	sp, #8
 80009ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80009f0:	b003      	add	sp, #12
 80009f2:	4770      	bx	lr
 80009f4:	20000048 	.word	0x20000048

080009f8 <_fwalk_reent>:
 80009f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009fc:	4606      	mov	r6, r0
 80009fe:	4688      	mov	r8, r1
 8000a00:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a04:	2700      	movs	r7, #0
 8000a06:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a0a:	f1b9 0901 	subs.w	r9, r9, #1
 8000a0e:	d505      	bpl.n	8000a1c <_fwalk_reent+0x24>
 8000a10:	6824      	ldr	r4, [r4, #0]
 8000a12:	2c00      	cmp	r4, #0
 8000a14:	d1f7      	bne.n	8000a06 <_fwalk_reent+0xe>
 8000a16:	4638      	mov	r0, r7
 8000a18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a1c:	89ab      	ldrh	r3, [r5, #12]
 8000a1e:	2b01      	cmp	r3, #1
 8000a20:	d907      	bls.n	8000a32 <_fwalk_reent+0x3a>
 8000a22:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a26:	3301      	adds	r3, #1
 8000a28:	d003      	beq.n	8000a32 <_fwalk_reent+0x3a>
 8000a2a:	4629      	mov	r1, r5
 8000a2c:	4630      	mov	r0, r6
 8000a2e:	47c0      	blx	r8
 8000a30:	4307      	orrs	r7, r0
 8000a32:	3568      	adds	r5, #104	; 0x68
 8000a34:	e7e9      	b.n	8000a0a <_fwalk_reent+0x12>

08000a36 <__retarget_lock_init_recursive>:
 8000a36:	4770      	bx	lr

08000a38 <__retarget_lock_acquire_recursive>:
 8000a38:	4770      	bx	lr

08000a3a <__retarget_lock_release_recursive>:
 8000a3a:	4770      	bx	lr

08000a3c <malloc>:
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <malloc+0xc>)
 8000a3e:	4601      	mov	r1, r0
 8000a40:	6818      	ldr	r0, [r3, #0]
 8000a42:	f000 b86f 	b.w	8000b24 <_malloc_r>
 8000a46:	bf00      	nop
 8000a48:	20000048 	.word	0x20000048

08000a4c <_free_r>:
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000a4e:	2900      	cmp	r1, #0
 8000a50:	d044      	beq.n	8000adc <_free_r+0x90>
 8000a52:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a56:	9001      	str	r0, [sp, #4]
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	f1a1 0404 	sub.w	r4, r1, #4
 8000a5e:	bfb8      	it	lt
 8000a60:	18e4      	addlt	r4, r4, r3
 8000a62:	f000 fe81 	bl	8001768 <__malloc_lock>
 8000a66:	4a1e      	ldr	r2, [pc, #120]	; (8000ae0 <_free_r+0x94>)
 8000a68:	9801      	ldr	r0, [sp, #4]
 8000a6a:	6813      	ldr	r3, [r2, #0]
 8000a6c:	b933      	cbnz	r3, 8000a7c <_free_r+0x30>
 8000a6e:	6063      	str	r3, [r4, #4]
 8000a70:	6014      	str	r4, [r2, #0]
 8000a72:	b003      	add	sp, #12
 8000a74:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000a78:	f000 be7c 	b.w	8001774 <__malloc_unlock>
 8000a7c:	42a3      	cmp	r3, r4
 8000a7e:	d908      	bls.n	8000a92 <_free_r+0x46>
 8000a80:	6825      	ldr	r5, [r4, #0]
 8000a82:	1961      	adds	r1, r4, r5
 8000a84:	428b      	cmp	r3, r1
 8000a86:	bf01      	itttt	eq
 8000a88:	6819      	ldreq	r1, [r3, #0]
 8000a8a:	685b      	ldreq	r3, [r3, #4]
 8000a8c:	1949      	addeq	r1, r1, r5
 8000a8e:	6021      	streq	r1, [r4, #0]
 8000a90:	e7ed      	b.n	8000a6e <_free_r+0x22>
 8000a92:	461a      	mov	r2, r3
 8000a94:	685b      	ldr	r3, [r3, #4]
 8000a96:	b10b      	cbz	r3, 8000a9c <_free_r+0x50>
 8000a98:	42a3      	cmp	r3, r4
 8000a9a:	d9fa      	bls.n	8000a92 <_free_r+0x46>
 8000a9c:	6811      	ldr	r1, [r2, #0]
 8000a9e:	1855      	adds	r5, r2, r1
 8000aa0:	42a5      	cmp	r5, r4
 8000aa2:	d10b      	bne.n	8000abc <_free_r+0x70>
 8000aa4:	6824      	ldr	r4, [r4, #0]
 8000aa6:	4421      	add	r1, r4
 8000aa8:	1854      	adds	r4, r2, r1
 8000aaa:	42a3      	cmp	r3, r4
 8000aac:	6011      	str	r1, [r2, #0]
 8000aae:	d1e0      	bne.n	8000a72 <_free_r+0x26>
 8000ab0:	681c      	ldr	r4, [r3, #0]
 8000ab2:	685b      	ldr	r3, [r3, #4]
 8000ab4:	6053      	str	r3, [r2, #4]
 8000ab6:	4421      	add	r1, r4
 8000ab8:	6011      	str	r1, [r2, #0]
 8000aba:	e7da      	b.n	8000a72 <_free_r+0x26>
 8000abc:	d902      	bls.n	8000ac4 <_free_r+0x78>
 8000abe:	230c      	movs	r3, #12
 8000ac0:	6003      	str	r3, [r0, #0]
 8000ac2:	e7d6      	b.n	8000a72 <_free_r+0x26>
 8000ac4:	6825      	ldr	r5, [r4, #0]
 8000ac6:	1961      	adds	r1, r4, r5
 8000ac8:	428b      	cmp	r3, r1
 8000aca:	bf04      	itt	eq
 8000acc:	6819      	ldreq	r1, [r3, #0]
 8000ace:	685b      	ldreq	r3, [r3, #4]
 8000ad0:	6063      	str	r3, [r4, #4]
 8000ad2:	bf04      	itt	eq
 8000ad4:	1949      	addeq	r1, r1, r5
 8000ad6:	6021      	streq	r1, [r4, #0]
 8000ad8:	6054      	str	r4, [r2, #4]
 8000ada:	e7ca      	b.n	8000a72 <_free_r+0x26>
 8000adc:	b003      	add	sp, #12
 8000ade:	bd30      	pop	{r4, r5, pc}
 8000ae0:	200000d0 	.word	0x200000d0

08000ae4 <sbrk_aligned>:
 8000ae4:	b570      	push	{r4, r5, r6, lr}
 8000ae6:	4e0e      	ldr	r6, [pc, #56]	; (8000b20 <sbrk_aligned+0x3c>)
 8000ae8:	460c      	mov	r4, r1
 8000aea:	6831      	ldr	r1, [r6, #0]
 8000aec:	4605      	mov	r5, r0
 8000aee:	b911      	cbnz	r1, 8000af6 <sbrk_aligned+0x12>
 8000af0:	f000 fbc2 	bl	8001278 <_sbrk_r>
 8000af4:	6030      	str	r0, [r6, #0]
 8000af6:	4621      	mov	r1, r4
 8000af8:	4628      	mov	r0, r5
 8000afa:	f000 fbbd 	bl	8001278 <_sbrk_r>
 8000afe:	1c43      	adds	r3, r0, #1
 8000b00:	d00a      	beq.n	8000b18 <sbrk_aligned+0x34>
 8000b02:	1cc4      	adds	r4, r0, #3
 8000b04:	f024 0403 	bic.w	r4, r4, #3
 8000b08:	42a0      	cmp	r0, r4
 8000b0a:	d007      	beq.n	8000b1c <sbrk_aligned+0x38>
 8000b0c:	1a21      	subs	r1, r4, r0
 8000b0e:	4628      	mov	r0, r5
 8000b10:	f000 fbb2 	bl	8001278 <_sbrk_r>
 8000b14:	3001      	adds	r0, #1
 8000b16:	d101      	bne.n	8000b1c <sbrk_aligned+0x38>
 8000b18:	f04f 34ff 	mov.w	r4, #4294967295
 8000b1c:	4620      	mov	r0, r4
 8000b1e:	bd70      	pop	{r4, r5, r6, pc}
 8000b20:	200000d4 	.word	0x200000d4

08000b24 <_malloc_r>:
 8000b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b28:	1ccd      	adds	r5, r1, #3
 8000b2a:	f025 0503 	bic.w	r5, r5, #3
 8000b2e:	3508      	adds	r5, #8
 8000b30:	2d0c      	cmp	r5, #12
 8000b32:	bf38      	it	cc
 8000b34:	250c      	movcc	r5, #12
 8000b36:	2d00      	cmp	r5, #0
 8000b38:	4607      	mov	r7, r0
 8000b3a:	db01      	blt.n	8000b40 <_malloc_r+0x1c>
 8000b3c:	42a9      	cmp	r1, r5
 8000b3e:	d905      	bls.n	8000b4c <_malloc_r+0x28>
 8000b40:	230c      	movs	r3, #12
 8000b42:	603b      	str	r3, [r7, #0]
 8000b44:	2600      	movs	r6, #0
 8000b46:	4630      	mov	r0, r6
 8000b48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b4c:	4e2e      	ldr	r6, [pc, #184]	; (8000c08 <_malloc_r+0xe4>)
 8000b4e:	f000 fe0b 	bl	8001768 <__malloc_lock>
 8000b52:	6833      	ldr	r3, [r6, #0]
 8000b54:	461c      	mov	r4, r3
 8000b56:	bb34      	cbnz	r4, 8000ba6 <_malloc_r+0x82>
 8000b58:	4629      	mov	r1, r5
 8000b5a:	4638      	mov	r0, r7
 8000b5c:	f7ff ffc2 	bl	8000ae4 <sbrk_aligned>
 8000b60:	1c43      	adds	r3, r0, #1
 8000b62:	4604      	mov	r4, r0
 8000b64:	d14d      	bne.n	8000c02 <_malloc_r+0xde>
 8000b66:	6834      	ldr	r4, [r6, #0]
 8000b68:	4626      	mov	r6, r4
 8000b6a:	2e00      	cmp	r6, #0
 8000b6c:	d140      	bne.n	8000bf0 <_malloc_r+0xcc>
 8000b6e:	6823      	ldr	r3, [r4, #0]
 8000b70:	4631      	mov	r1, r6
 8000b72:	4638      	mov	r0, r7
 8000b74:	eb04 0803 	add.w	r8, r4, r3
 8000b78:	f000 fb7e 	bl	8001278 <_sbrk_r>
 8000b7c:	4580      	cmp	r8, r0
 8000b7e:	d13a      	bne.n	8000bf6 <_malloc_r+0xd2>
 8000b80:	6821      	ldr	r1, [r4, #0]
 8000b82:	3503      	adds	r5, #3
 8000b84:	1a6d      	subs	r5, r5, r1
 8000b86:	f025 0503 	bic.w	r5, r5, #3
 8000b8a:	3508      	adds	r5, #8
 8000b8c:	2d0c      	cmp	r5, #12
 8000b8e:	bf38      	it	cc
 8000b90:	250c      	movcc	r5, #12
 8000b92:	4629      	mov	r1, r5
 8000b94:	4638      	mov	r0, r7
 8000b96:	f7ff ffa5 	bl	8000ae4 <sbrk_aligned>
 8000b9a:	3001      	adds	r0, #1
 8000b9c:	d02b      	beq.n	8000bf6 <_malloc_r+0xd2>
 8000b9e:	6823      	ldr	r3, [r4, #0]
 8000ba0:	442b      	add	r3, r5
 8000ba2:	6023      	str	r3, [r4, #0]
 8000ba4:	e00e      	b.n	8000bc4 <_malloc_r+0xa0>
 8000ba6:	6822      	ldr	r2, [r4, #0]
 8000ba8:	1b52      	subs	r2, r2, r5
 8000baa:	d41e      	bmi.n	8000bea <_malloc_r+0xc6>
 8000bac:	2a0b      	cmp	r2, #11
 8000bae:	d916      	bls.n	8000bde <_malloc_r+0xba>
 8000bb0:	1961      	adds	r1, r4, r5
 8000bb2:	42a3      	cmp	r3, r4
 8000bb4:	6025      	str	r5, [r4, #0]
 8000bb6:	bf18      	it	ne
 8000bb8:	6059      	strne	r1, [r3, #4]
 8000bba:	6863      	ldr	r3, [r4, #4]
 8000bbc:	bf08      	it	eq
 8000bbe:	6031      	streq	r1, [r6, #0]
 8000bc0:	5162      	str	r2, [r4, r5]
 8000bc2:	604b      	str	r3, [r1, #4]
 8000bc4:	4638      	mov	r0, r7
 8000bc6:	f104 060b 	add.w	r6, r4, #11
 8000bca:	f000 fdd3 	bl	8001774 <__malloc_unlock>
 8000bce:	f026 0607 	bic.w	r6, r6, #7
 8000bd2:	1d23      	adds	r3, r4, #4
 8000bd4:	1af2      	subs	r2, r6, r3
 8000bd6:	d0b6      	beq.n	8000b46 <_malloc_r+0x22>
 8000bd8:	1b9b      	subs	r3, r3, r6
 8000bda:	50a3      	str	r3, [r4, r2]
 8000bdc:	e7b3      	b.n	8000b46 <_malloc_r+0x22>
 8000bde:	6862      	ldr	r2, [r4, #4]
 8000be0:	42a3      	cmp	r3, r4
 8000be2:	bf0c      	ite	eq
 8000be4:	6032      	streq	r2, [r6, #0]
 8000be6:	605a      	strne	r2, [r3, #4]
 8000be8:	e7ec      	b.n	8000bc4 <_malloc_r+0xa0>
 8000bea:	4623      	mov	r3, r4
 8000bec:	6864      	ldr	r4, [r4, #4]
 8000bee:	e7b2      	b.n	8000b56 <_malloc_r+0x32>
 8000bf0:	4634      	mov	r4, r6
 8000bf2:	6876      	ldr	r6, [r6, #4]
 8000bf4:	e7b9      	b.n	8000b6a <_malloc_r+0x46>
 8000bf6:	230c      	movs	r3, #12
 8000bf8:	603b      	str	r3, [r7, #0]
 8000bfa:	4638      	mov	r0, r7
 8000bfc:	f000 fdba 	bl	8001774 <__malloc_unlock>
 8000c00:	e7a1      	b.n	8000b46 <_malloc_r+0x22>
 8000c02:	6025      	str	r5, [r4, #0]
 8000c04:	e7de      	b.n	8000bc4 <_malloc_r+0xa0>
 8000c06:	bf00      	nop
 8000c08:	200000d0 	.word	0x200000d0

08000c0c <__sfputc_r>:
 8000c0c:	6893      	ldr	r3, [r2, #8]
 8000c0e:	3b01      	subs	r3, #1
 8000c10:	2b00      	cmp	r3, #0
 8000c12:	b410      	push	{r4}
 8000c14:	6093      	str	r3, [r2, #8]
 8000c16:	da08      	bge.n	8000c2a <__sfputc_r+0x1e>
 8000c18:	6994      	ldr	r4, [r2, #24]
 8000c1a:	42a3      	cmp	r3, r4
 8000c1c:	db01      	blt.n	8000c22 <__sfputc_r+0x16>
 8000c1e:	290a      	cmp	r1, #10
 8000c20:	d103      	bne.n	8000c2a <__sfputc_r+0x1e>
 8000c22:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c26:	f000 bb7b 	b.w	8001320 <__swbuf_r>
 8000c2a:	6813      	ldr	r3, [r2, #0]
 8000c2c:	1c58      	adds	r0, r3, #1
 8000c2e:	6010      	str	r0, [r2, #0]
 8000c30:	7019      	strb	r1, [r3, #0]
 8000c32:	4608      	mov	r0, r1
 8000c34:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c38:	4770      	bx	lr

08000c3a <__sfputs_r>:
 8000c3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c3c:	4606      	mov	r6, r0
 8000c3e:	460f      	mov	r7, r1
 8000c40:	4614      	mov	r4, r2
 8000c42:	18d5      	adds	r5, r2, r3
 8000c44:	42ac      	cmp	r4, r5
 8000c46:	d101      	bne.n	8000c4c <__sfputs_r+0x12>
 8000c48:	2000      	movs	r0, #0
 8000c4a:	e007      	b.n	8000c5c <__sfputs_r+0x22>
 8000c4c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c50:	463a      	mov	r2, r7
 8000c52:	4630      	mov	r0, r6
 8000c54:	f7ff ffda 	bl	8000c0c <__sfputc_r>
 8000c58:	1c43      	adds	r3, r0, #1
 8000c5a:	d1f3      	bne.n	8000c44 <__sfputs_r+0xa>
 8000c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c60 <_vfiprintf_r>:
 8000c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c64:	460d      	mov	r5, r1
 8000c66:	b09d      	sub	sp, #116	; 0x74
 8000c68:	4614      	mov	r4, r2
 8000c6a:	4698      	mov	r8, r3
 8000c6c:	4606      	mov	r6, r0
 8000c6e:	b118      	cbz	r0, 8000c78 <_vfiprintf_r+0x18>
 8000c70:	6983      	ldr	r3, [r0, #24]
 8000c72:	b90b      	cbnz	r3, 8000c78 <_vfiprintf_r+0x18>
 8000c74:	f7ff fe30 	bl	80008d8 <__sinit>
 8000c78:	4b89      	ldr	r3, [pc, #548]	; (8000ea0 <_vfiprintf_r+0x240>)
 8000c7a:	429d      	cmp	r5, r3
 8000c7c:	d11b      	bne.n	8000cb6 <_vfiprintf_r+0x56>
 8000c7e:	6875      	ldr	r5, [r6, #4]
 8000c80:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c82:	07d9      	lsls	r1, r3, #31
 8000c84:	d405      	bmi.n	8000c92 <_vfiprintf_r+0x32>
 8000c86:	89ab      	ldrh	r3, [r5, #12]
 8000c88:	059a      	lsls	r2, r3, #22
 8000c8a:	d402      	bmi.n	8000c92 <_vfiprintf_r+0x32>
 8000c8c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c8e:	f7ff fed3 	bl	8000a38 <__retarget_lock_acquire_recursive>
 8000c92:	89ab      	ldrh	r3, [r5, #12]
 8000c94:	071b      	lsls	r3, r3, #28
 8000c96:	d501      	bpl.n	8000c9c <_vfiprintf_r+0x3c>
 8000c98:	692b      	ldr	r3, [r5, #16]
 8000c9a:	b9eb      	cbnz	r3, 8000cd8 <_vfiprintf_r+0x78>
 8000c9c:	4629      	mov	r1, r5
 8000c9e:	4630      	mov	r0, r6
 8000ca0:	f000 fba2 	bl	80013e8 <__swsetup_r>
 8000ca4:	b1c0      	cbz	r0, 8000cd8 <_vfiprintf_r+0x78>
 8000ca6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ca8:	07dc      	lsls	r4, r3, #31
 8000caa:	d50e      	bpl.n	8000cca <_vfiprintf_r+0x6a>
 8000cac:	f04f 30ff 	mov.w	r0, #4294967295
 8000cb0:	b01d      	add	sp, #116	; 0x74
 8000cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000cb6:	4b7b      	ldr	r3, [pc, #492]	; (8000ea4 <_vfiprintf_r+0x244>)
 8000cb8:	429d      	cmp	r5, r3
 8000cba:	d101      	bne.n	8000cc0 <_vfiprintf_r+0x60>
 8000cbc:	68b5      	ldr	r5, [r6, #8]
 8000cbe:	e7df      	b.n	8000c80 <_vfiprintf_r+0x20>
 8000cc0:	4b79      	ldr	r3, [pc, #484]	; (8000ea8 <_vfiprintf_r+0x248>)
 8000cc2:	429d      	cmp	r5, r3
 8000cc4:	bf08      	it	eq
 8000cc6:	68f5      	ldreq	r5, [r6, #12]
 8000cc8:	e7da      	b.n	8000c80 <_vfiprintf_r+0x20>
 8000cca:	89ab      	ldrh	r3, [r5, #12]
 8000ccc:	0598      	lsls	r0, r3, #22
 8000cce:	d4ed      	bmi.n	8000cac <_vfiprintf_r+0x4c>
 8000cd0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cd2:	f7ff feb2 	bl	8000a3a <__retarget_lock_release_recursive>
 8000cd6:	e7e9      	b.n	8000cac <_vfiprintf_r+0x4c>
 8000cd8:	2300      	movs	r3, #0
 8000cda:	9309      	str	r3, [sp, #36]	; 0x24
 8000cdc:	2320      	movs	r3, #32
 8000cde:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ce2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ce6:	2330      	movs	r3, #48	; 0x30
 8000ce8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000eac <_vfiprintf_r+0x24c>
 8000cec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000cf0:	f04f 0901 	mov.w	r9, #1
 8000cf4:	4623      	mov	r3, r4
 8000cf6:	469a      	mov	sl, r3
 8000cf8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cfc:	b10a      	cbz	r2, 8000d02 <_vfiprintf_r+0xa2>
 8000cfe:	2a25      	cmp	r2, #37	; 0x25
 8000d00:	d1f9      	bne.n	8000cf6 <_vfiprintf_r+0x96>
 8000d02:	ebba 0b04 	subs.w	fp, sl, r4
 8000d06:	d00b      	beq.n	8000d20 <_vfiprintf_r+0xc0>
 8000d08:	465b      	mov	r3, fp
 8000d0a:	4622      	mov	r2, r4
 8000d0c:	4629      	mov	r1, r5
 8000d0e:	4630      	mov	r0, r6
 8000d10:	f7ff ff93 	bl	8000c3a <__sfputs_r>
 8000d14:	3001      	adds	r0, #1
 8000d16:	f000 80aa 	beq.w	8000e6e <_vfiprintf_r+0x20e>
 8000d1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000d1c:	445a      	add	r2, fp
 8000d1e:	9209      	str	r2, [sp, #36]	; 0x24
 8000d20:	f89a 3000 	ldrb.w	r3, [sl]
 8000d24:	2b00      	cmp	r3, #0
 8000d26:	f000 80a2 	beq.w	8000e6e <_vfiprintf_r+0x20e>
 8000d2a:	2300      	movs	r3, #0
 8000d2c:	f04f 32ff 	mov.w	r2, #4294967295
 8000d30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d34:	f10a 0a01 	add.w	sl, sl, #1
 8000d38:	9304      	str	r3, [sp, #16]
 8000d3a:	9307      	str	r3, [sp, #28]
 8000d3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d40:	931a      	str	r3, [sp, #104]	; 0x68
 8000d42:	4654      	mov	r4, sl
 8000d44:	2205      	movs	r2, #5
 8000d46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d4a:	4858      	ldr	r0, [pc, #352]	; (8000eac <_vfiprintf_r+0x24c>)
 8000d4c:	f7ff fa50 	bl	80001f0 <memchr>
 8000d50:	9a04      	ldr	r2, [sp, #16]
 8000d52:	b9d8      	cbnz	r0, 8000d8c <_vfiprintf_r+0x12c>
 8000d54:	06d1      	lsls	r1, r2, #27
 8000d56:	bf44      	itt	mi
 8000d58:	2320      	movmi	r3, #32
 8000d5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d5e:	0713      	lsls	r3, r2, #28
 8000d60:	bf44      	itt	mi
 8000d62:	232b      	movmi	r3, #43	; 0x2b
 8000d64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d68:	f89a 3000 	ldrb.w	r3, [sl]
 8000d6c:	2b2a      	cmp	r3, #42	; 0x2a
 8000d6e:	d015      	beq.n	8000d9c <_vfiprintf_r+0x13c>
 8000d70:	9a07      	ldr	r2, [sp, #28]
 8000d72:	4654      	mov	r4, sl
 8000d74:	2000      	movs	r0, #0
 8000d76:	f04f 0c0a 	mov.w	ip, #10
 8000d7a:	4621      	mov	r1, r4
 8000d7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d80:	3b30      	subs	r3, #48	; 0x30
 8000d82:	2b09      	cmp	r3, #9
 8000d84:	d94e      	bls.n	8000e24 <_vfiprintf_r+0x1c4>
 8000d86:	b1b0      	cbz	r0, 8000db6 <_vfiprintf_r+0x156>
 8000d88:	9207      	str	r2, [sp, #28]
 8000d8a:	e014      	b.n	8000db6 <_vfiprintf_r+0x156>
 8000d8c:	eba0 0308 	sub.w	r3, r0, r8
 8000d90:	fa09 f303 	lsl.w	r3, r9, r3
 8000d94:	4313      	orrs	r3, r2
 8000d96:	9304      	str	r3, [sp, #16]
 8000d98:	46a2      	mov	sl, r4
 8000d9a:	e7d2      	b.n	8000d42 <_vfiprintf_r+0xe2>
 8000d9c:	9b03      	ldr	r3, [sp, #12]
 8000d9e:	1d19      	adds	r1, r3, #4
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	9103      	str	r1, [sp, #12]
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	bfbb      	ittet	lt
 8000da8:	425b      	neglt	r3, r3
 8000daa:	f042 0202 	orrlt.w	r2, r2, #2
 8000dae:	9307      	strge	r3, [sp, #28]
 8000db0:	9307      	strlt	r3, [sp, #28]
 8000db2:	bfb8      	it	lt
 8000db4:	9204      	strlt	r2, [sp, #16]
 8000db6:	7823      	ldrb	r3, [r4, #0]
 8000db8:	2b2e      	cmp	r3, #46	; 0x2e
 8000dba:	d10c      	bne.n	8000dd6 <_vfiprintf_r+0x176>
 8000dbc:	7863      	ldrb	r3, [r4, #1]
 8000dbe:	2b2a      	cmp	r3, #42	; 0x2a
 8000dc0:	d135      	bne.n	8000e2e <_vfiprintf_r+0x1ce>
 8000dc2:	9b03      	ldr	r3, [sp, #12]
 8000dc4:	1d1a      	adds	r2, r3, #4
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	9203      	str	r2, [sp, #12]
 8000dca:	2b00      	cmp	r3, #0
 8000dcc:	bfb8      	it	lt
 8000dce:	f04f 33ff 	movlt.w	r3, #4294967295
 8000dd2:	3402      	adds	r4, #2
 8000dd4:	9305      	str	r3, [sp, #20]
 8000dd6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000ebc <_vfiprintf_r+0x25c>
 8000dda:	7821      	ldrb	r1, [r4, #0]
 8000ddc:	2203      	movs	r2, #3
 8000dde:	4650      	mov	r0, sl
 8000de0:	f7ff fa06 	bl	80001f0 <memchr>
 8000de4:	b140      	cbz	r0, 8000df8 <_vfiprintf_r+0x198>
 8000de6:	2340      	movs	r3, #64	; 0x40
 8000de8:	eba0 000a 	sub.w	r0, r0, sl
 8000dec:	fa03 f000 	lsl.w	r0, r3, r0
 8000df0:	9b04      	ldr	r3, [sp, #16]
 8000df2:	4303      	orrs	r3, r0
 8000df4:	3401      	adds	r4, #1
 8000df6:	9304      	str	r3, [sp, #16]
 8000df8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dfc:	482c      	ldr	r0, [pc, #176]	; (8000eb0 <_vfiprintf_r+0x250>)
 8000dfe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000e02:	2206      	movs	r2, #6
 8000e04:	f7ff f9f4 	bl	80001f0 <memchr>
 8000e08:	2800      	cmp	r0, #0
 8000e0a:	d03f      	beq.n	8000e8c <_vfiprintf_r+0x22c>
 8000e0c:	4b29      	ldr	r3, [pc, #164]	; (8000eb4 <_vfiprintf_r+0x254>)
 8000e0e:	bb1b      	cbnz	r3, 8000e58 <_vfiprintf_r+0x1f8>
 8000e10:	9b03      	ldr	r3, [sp, #12]
 8000e12:	3307      	adds	r3, #7
 8000e14:	f023 0307 	bic.w	r3, r3, #7
 8000e18:	3308      	adds	r3, #8
 8000e1a:	9303      	str	r3, [sp, #12]
 8000e1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e1e:	443b      	add	r3, r7
 8000e20:	9309      	str	r3, [sp, #36]	; 0x24
 8000e22:	e767      	b.n	8000cf4 <_vfiprintf_r+0x94>
 8000e24:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e28:	460c      	mov	r4, r1
 8000e2a:	2001      	movs	r0, #1
 8000e2c:	e7a5      	b.n	8000d7a <_vfiprintf_r+0x11a>
 8000e2e:	2300      	movs	r3, #0
 8000e30:	3401      	adds	r4, #1
 8000e32:	9305      	str	r3, [sp, #20]
 8000e34:	4619      	mov	r1, r3
 8000e36:	f04f 0c0a 	mov.w	ip, #10
 8000e3a:	4620      	mov	r0, r4
 8000e3c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e40:	3a30      	subs	r2, #48	; 0x30
 8000e42:	2a09      	cmp	r2, #9
 8000e44:	d903      	bls.n	8000e4e <_vfiprintf_r+0x1ee>
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	d0c5      	beq.n	8000dd6 <_vfiprintf_r+0x176>
 8000e4a:	9105      	str	r1, [sp, #20]
 8000e4c:	e7c3      	b.n	8000dd6 <_vfiprintf_r+0x176>
 8000e4e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e52:	4604      	mov	r4, r0
 8000e54:	2301      	movs	r3, #1
 8000e56:	e7f0      	b.n	8000e3a <_vfiprintf_r+0x1da>
 8000e58:	ab03      	add	r3, sp, #12
 8000e5a:	9300      	str	r3, [sp, #0]
 8000e5c:	462a      	mov	r2, r5
 8000e5e:	4b16      	ldr	r3, [pc, #88]	; (8000eb8 <_vfiprintf_r+0x258>)
 8000e60:	a904      	add	r1, sp, #16
 8000e62:	4630      	mov	r0, r6
 8000e64:	f3af 8000 	nop.w
 8000e68:	4607      	mov	r7, r0
 8000e6a:	1c78      	adds	r0, r7, #1
 8000e6c:	d1d6      	bne.n	8000e1c <_vfiprintf_r+0x1bc>
 8000e6e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e70:	07d9      	lsls	r1, r3, #31
 8000e72:	d405      	bmi.n	8000e80 <_vfiprintf_r+0x220>
 8000e74:	89ab      	ldrh	r3, [r5, #12]
 8000e76:	059a      	lsls	r2, r3, #22
 8000e78:	d402      	bmi.n	8000e80 <_vfiprintf_r+0x220>
 8000e7a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e7c:	f7ff fddd 	bl	8000a3a <__retarget_lock_release_recursive>
 8000e80:	89ab      	ldrh	r3, [r5, #12]
 8000e82:	065b      	lsls	r3, r3, #25
 8000e84:	f53f af12 	bmi.w	8000cac <_vfiprintf_r+0x4c>
 8000e88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e8a:	e711      	b.n	8000cb0 <_vfiprintf_r+0x50>
 8000e8c:	ab03      	add	r3, sp, #12
 8000e8e:	9300      	str	r3, [sp, #0]
 8000e90:	462a      	mov	r2, r5
 8000e92:	4b09      	ldr	r3, [pc, #36]	; (8000eb8 <_vfiprintf_r+0x258>)
 8000e94:	a904      	add	r1, sp, #16
 8000e96:	4630      	mov	r0, r6
 8000e98:	f000 f880 	bl	8000f9c <_printf_i>
 8000e9c:	e7e4      	b.n	8000e68 <_vfiprintf_r+0x208>
 8000e9e:	bf00      	nop
 8000ea0:	080019b8 	.word	0x080019b8
 8000ea4:	080019d8 	.word	0x080019d8
 8000ea8:	08001998 	.word	0x08001998
 8000eac:	080019f8 	.word	0x080019f8
 8000eb0:	08001a02 	.word	0x08001a02
 8000eb4:	00000000 	.word	0x00000000
 8000eb8:	08000c3b 	.word	0x08000c3b
 8000ebc:	080019fe 	.word	0x080019fe

08000ec0 <_printf_common>:
 8000ec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ec4:	4616      	mov	r6, r2
 8000ec6:	4699      	mov	r9, r3
 8000ec8:	688a      	ldr	r2, [r1, #8]
 8000eca:	690b      	ldr	r3, [r1, #16]
 8000ecc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ed0:	4293      	cmp	r3, r2
 8000ed2:	bfb8      	it	lt
 8000ed4:	4613      	movlt	r3, r2
 8000ed6:	6033      	str	r3, [r6, #0]
 8000ed8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000edc:	4607      	mov	r7, r0
 8000ede:	460c      	mov	r4, r1
 8000ee0:	b10a      	cbz	r2, 8000ee6 <_printf_common+0x26>
 8000ee2:	3301      	adds	r3, #1
 8000ee4:	6033      	str	r3, [r6, #0]
 8000ee6:	6823      	ldr	r3, [r4, #0]
 8000ee8:	0699      	lsls	r1, r3, #26
 8000eea:	bf42      	ittt	mi
 8000eec:	6833      	ldrmi	r3, [r6, #0]
 8000eee:	3302      	addmi	r3, #2
 8000ef0:	6033      	strmi	r3, [r6, #0]
 8000ef2:	6825      	ldr	r5, [r4, #0]
 8000ef4:	f015 0506 	ands.w	r5, r5, #6
 8000ef8:	d106      	bne.n	8000f08 <_printf_common+0x48>
 8000efa:	f104 0a19 	add.w	sl, r4, #25
 8000efe:	68e3      	ldr	r3, [r4, #12]
 8000f00:	6832      	ldr	r2, [r6, #0]
 8000f02:	1a9b      	subs	r3, r3, r2
 8000f04:	42ab      	cmp	r3, r5
 8000f06:	dc26      	bgt.n	8000f56 <_printf_common+0x96>
 8000f08:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000f0c:	1e13      	subs	r3, r2, #0
 8000f0e:	6822      	ldr	r2, [r4, #0]
 8000f10:	bf18      	it	ne
 8000f12:	2301      	movne	r3, #1
 8000f14:	0692      	lsls	r2, r2, #26
 8000f16:	d42b      	bmi.n	8000f70 <_printf_common+0xb0>
 8000f18:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000f1c:	4649      	mov	r1, r9
 8000f1e:	4638      	mov	r0, r7
 8000f20:	47c0      	blx	r8
 8000f22:	3001      	adds	r0, #1
 8000f24:	d01e      	beq.n	8000f64 <_printf_common+0xa4>
 8000f26:	6823      	ldr	r3, [r4, #0]
 8000f28:	68e5      	ldr	r5, [r4, #12]
 8000f2a:	6832      	ldr	r2, [r6, #0]
 8000f2c:	f003 0306 	and.w	r3, r3, #6
 8000f30:	2b04      	cmp	r3, #4
 8000f32:	bf08      	it	eq
 8000f34:	1aad      	subeq	r5, r5, r2
 8000f36:	68a3      	ldr	r3, [r4, #8]
 8000f38:	6922      	ldr	r2, [r4, #16]
 8000f3a:	bf0c      	ite	eq
 8000f3c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f40:	2500      	movne	r5, #0
 8000f42:	4293      	cmp	r3, r2
 8000f44:	bfc4      	itt	gt
 8000f46:	1a9b      	subgt	r3, r3, r2
 8000f48:	18ed      	addgt	r5, r5, r3
 8000f4a:	2600      	movs	r6, #0
 8000f4c:	341a      	adds	r4, #26
 8000f4e:	42b5      	cmp	r5, r6
 8000f50:	d11a      	bne.n	8000f88 <_printf_common+0xc8>
 8000f52:	2000      	movs	r0, #0
 8000f54:	e008      	b.n	8000f68 <_printf_common+0xa8>
 8000f56:	2301      	movs	r3, #1
 8000f58:	4652      	mov	r2, sl
 8000f5a:	4649      	mov	r1, r9
 8000f5c:	4638      	mov	r0, r7
 8000f5e:	47c0      	blx	r8
 8000f60:	3001      	adds	r0, #1
 8000f62:	d103      	bne.n	8000f6c <_printf_common+0xac>
 8000f64:	f04f 30ff 	mov.w	r0, #4294967295
 8000f68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f6c:	3501      	adds	r5, #1
 8000f6e:	e7c6      	b.n	8000efe <_printf_common+0x3e>
 8000f70:	18e1      	adds	r1, r4, r3
 8000f72:	1c5a      	adds	r2, r3, #1
 8000f74:	2030      	movs	r0, #48	; 0x30
 8000f76:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f7a:	4422      	add	r2, r4
 8000f7c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f80:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f84:	3302      	adds	r3, #2
 8000f86:	e7c7      	b.n	8000f18 <_printf_common+0x58>
 8000f88:	2301      	movs	r3, #1
 8000f8a:	4622      	mov	r2, r4
 8000f8c:	4649      	mov	r1, r9
 8000f8e:	4638      	mov	r0, r7
 8000f90:	47c0      	blx	r8
 8000f92:	3001      	adds	r0, #1
 8000f94:	d0e6      	beq.n	8000f64 <_printf_common+0xa4>
 8000f96:	3601      	adds	r6, #1
 8000f98:	e7d9      	b.n	8000f4e <_printf_common+0x8e>
	...

08000f9c <_printf_i>:
 8000f9c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000fa0:	7e0f      	ldrb	r7, [r1, #24]
 8000fa2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000fa4:	2f78      	cmp	r7, #120	; 0x78
 8000fa6:	4691      	mov	r9, r2
 8000fa8:	4680      	mov	r8, r0
 8000faa:	460c      	mov	r4, r1
 8000fac:	469a      	mov	sl, r3
 8000fae:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000fb2:	d807      	bhi.n	8000fc4 <_printf_i+0x28>
 8000fb4:	2f62      	cmp	r7, #98	; 0x62
 8000fb6:	d80a      	bhi.n	8000fce <_printf_i+0x32>
 8000fb8:	2f00      	cmp	r7, #0
 8000fba:	f000 80d8 	beq.w	800116e <_printf_i+0x1d2>
 8000fbe:	2f58      	cmp	r7, #88	; 0x58
 8000fc0:	f000 80a3 	beq.w	800110a <_printf_i+0x16e>
 8000fc4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fc8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000fcc:	e03a      	b.n	8001044 <_printf_i+0xa8>
 8000fce:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000fd2:	2b15      	cmp	r3, #21
 8000fd4:	d8f6      	bhi.n	8000fc4 <_printf_i+0x28>
 8000fd6:	a101      	add	r1, pc, #4	; (adr r1, 8000fdc <_printf_i+0x40>)
 8000fd8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fdc:	08001035 	.word	0x08001035
 8000fe0:	08001049 	.word	0x08001049
 8000fe4:	08000fc5 	.word	0x08000fc5
 8000fe8:	08000fc5 	.word	0x08000fc5
 8000fec:	08000fc5 	.word	0x08000fc5
 8000ff0:	08000fc5 	.word	0x08000fc5
 8000ff4:	08001049 	.word	0x08001049
 8000ff8:	08000fc5 	.word	0x08000fc5
 8000ffc:	08000fc5 	.word	0x08000fc5
 8001000:	08000fc5 	.word	0x08000fc5
 8001004:	08000fc5 	.word	0x08000fc5
 8001008:	08001155 	.word	0x08001155
 800100c:	08001079 	.word	0x08001079
 8001010:	08001137 	.word	0x08001137
 8001014:	08000fc5 	.word	0x08000fc5
 8001018:	08000fc5 	.word	0x08000fc5
 800101c:	08001177 	.word	0x08001177
 8001020:	08000fc5 	.word	0x08000fc5
 8001024:	08001079 	.word	0x08001079
 8001028:	08000fc5 	.word	0x08000fc5
 800102c:	08000fc5 	.word	0x08000fc5
 8001030:	0800113f 	.word	0x0800113f
 8001034:	682b      	ldr	r3, [r5, #0]
 8001036:	1d1a      	adds	r2, r3, #4
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	602a      	str	r2, [r5, #0]
 800103c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001040:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001044:	2301      	movs	r3, #1
 8001046:	e0a3      	b.n	8001190 <_printf_i+0x1f4>
 8001048:	6820      	ldr	r0, [r4, #0]
 800104a:	6829      	ldr	r1, [r5, #0]
 800104c:	0606      	lsls	r6, r0, #24
 800104e:	f101 0304 	add.w	r3, r1, #4
 8001052:	d50a      	bpl.n	800106a <_printf_i+0xce>
 8001054:	680e      	ldr	r6, [r1, #0]
 8001056:	602b      	str	r3, [r5, #0]
 8001058:	2e00      	cmp	r6, #0
 800105a:	da03      	bge.n	8001064 <_printf_i+0xc8>
 800105c:	232d      	movs	r3, #45	; 0x2d
 800105e:	4276      	negs	r6, r6
 8001060:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001064:	485e      	ldr	r0, [pc, #376]	; (80011e0 <_printf_i+0x244>)
 8001066:	230a      	movs	r3, #10
 8001068:	e019      	b.n	800109e <_printf_i+0x102>
 800106a:	680e      	ldr	r6, [r1, #0]
 800106c:	602b      	str	r3, [r5, #0]
 800106e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001072:	bf18      	it	ne
 8001074:	b236      	sxthne	r6, r6
 8001076:	e7ef      	b.n	8001058 <_printf_i+0xbc>
 8001078:	682b      	ldr	r3, [r5, #0]
 800107a:	6820      	ldr	r0, [r4, #0]
 800107c:	1d19      	adds	r1, r3, #4
 800107e:	6029      	str	r1, [r5, #0]
 8001080:	0601      	lsls	r1, r0, #24
 8001082:	d501      	bpl.n	8001088 <_printf_i+0xec>
 8001084:	681e      	ldr	r6, [r3, #0]
 8001086:	e002      	b.n	800108e <_printf_i+0xf2>
 8001088:	0646      	lsls	r6, r0, #25
 800108a:	d5fb      	bpl.n	8001084 <_printf_i+0xe8>
 800108c:	881e      	ldrh	r6, [r3, #0]
 800108e:	4854      	ldr	r0, [pc, #336]	; (80011e0 <_printf_i+0x244>)
 8001090:	2f6f      	cmp	r7, #111	; 0x6f
 8001092:	bf0c      	ite	eq
 8001094:	2308      	moveq	r3, #8
 8001096:	230a      	movne	r3, #10
 8001098:	2100      	movs	r1, #0
 800109a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800109e:	6865      	ldr	r5, [r4, #4]
 80010a0:	60a5      	str	r5, [r4, #8]
 80010a2:	2d00      	cmp	r5, #0
 80010a4:	bfa2      	ittt	ge
 80010a6:	6821      	ldrge	r1, [r4, #0]
 80010a8:	f021 0104 	bicge.w	r1, r1, #4
 80010ac:	6021      	strge	r1, [r4, #0]
 80010ae:	b90e      	cbnz	r6, 80010b4 <_printf_i+0x118>
 80010b0:	2d00      	cmp	r5, #0
 80010b2:	d04d      	beq.n	8001150 <_printf_i+0x1b4>
 80010b4:	4615      	mov	r5, r2
 80010b6:	fbb6 f1f3 	udiv	r1, r6, r3
 80010ba:	fb03 6711 	mls	r7, r3, r1, r6
 80010be:	5dc7      	ldrb	r7, [r0, r7]
 80010c0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80010c4:	4637      	mov	r7, r6
 80010c6:	42bb      	cmp	r3, r7
 80010c8:	460e      	mov	r6, r1
 80010ca:	d9f4      	bls.n	80010b6 <_printf_i+0x11a>
 80010cc:	2b08      	cmp	r3, #8
 80010ce:	d10b      	bne.n	80010e8 <_printf_i+0x14c>
 80010d0:	6823      	ldr	r3, [r4, #0]
 80010d2:	07de      	lsls	r6, r3, #31
 80010d4:	d508      	bpl.n	80010e8 <_printf_i+0x14c>
 80010d6:	6923      	ldr	r3, [r4, #16]
 80010d8:	6861      	ldr	r1, [r4, #4]
 80010da:	4299      	cmp	r1, r3
 80010dc:	bfde      	ittt	le
 80010de:	2330      	movle	r3, #48	; 0x30
 80010e0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80010e4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80010e8:	1b52      	subs	r2, r2, r5
 80010ea:	6122      	str	r2, [r4, #16]
 80010ec:	f8cd a000 	str.w	sl, [sp]
 80010f0:	464b      	mov	r3, r9
 80010f2:	aa03      	add	r2, sp, #12
 80010f4:	4621      	mov	r1, r4
 80010f6:	4640      	mov	r0, r8
 80010f8:	f7ff fee2 	bl	8000ec0 <_printf_common>
 80010fc:	3001      	adds	r0, #1
 80010fe:	d14c      	bne.n	800119a <_printf_i+0x1fe>
 8001100:	f04f 30ff 	mov.w	r0, #4294967295
 8001104:	b004      	add	sp, #16
 8001106:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800110a:	4835      	ldr	r0, [pc, #212]	; (80011e0 <_printf_i+0x244>)
 800110c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001110:	6829      	ldr	r1, [r5, #0]
 8001112:	6823      	ldr	r3, [r4, #0]
 8001114:	f851 6b04 	ldr.w	r6, [r1], #4
 8001118:	6029      	str	r1, [r5, #0]
 800111a:	061d      	lsls	r5, r3, #24
 800111c:	d514      	bpl.n	8001148 <_printf_i+0x1ac>
 800111e:	07df      	lsls	r7, r3, #31
 8001120:	bf44      	itt	mi
 8001122:	f043 0320 	orrmi.w	r3, r3, #32
 8001126:	6023      	strmi	r3, [r4, #0]
 8001128:	b91e      	cbnz	r6, 8001132 <_printf_i+0x196>
 800112a:	6823      	ldr	r3, [r4, #0]
 800112c:	f023 0320 	bic.w	r3, r3, #32
 8001130:	6023      	str	r3, [r4, #0]
 8001132:	2310      	movs	r3, #16
 8001134:	e7b0      	b.n	8001098 <_printf_i+0xfc>
 8001136:	6823      	ldr	r3, [r4, #0]
 8001138:	f043 0320 	orr.w	r3, r3, #32
 800113c:	6023      	str	r3, [r4, #0]
 800113e:	2378      	movs	r3, #120	; 0x78
 8001140:	4828      	ldr	r0, [pc, #160]	; (80011e4 <_printf_i+0x248>)
 8001142:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001146:	e7e3      	b.n	8001110 <_printf_i+0x174>
 8001148:	0659      	lsls	r1, r3, #25
 800114a:	bf48      	it	mi
 800114c:	b2b6      	uxthmi	r6, r6
 800114e:	e7e6      	b.n	800111e <_printf_i+0x182>
 8001150:	4615      	mov	r5, r2
 8001152:	e7bb      	b.n	80010cc <_printf_i+0x130>
 8001154:	682b      	ldr	r3, [r5, #0]
 8001156:	6826      	ldr	r6, [r4, #0]
 8001158:	6961      	ldr	r1, [r4, #20]
 800115a:	1d18      	adds	r0, r3, #4
 800115c:	6028      	str	r0, [r5, #0]
 800115e:	0635      	lsls	r5, r6, #24
 8001160:	681b      	ldr	r3, [r3, #0]
 8001162:	d501      	bpl.n	8001168 <_printf_i+0x1cc>
 8001164:	6019      	str	r1, [r3, #0]
 8001166:	e002      	b.n	800116e <_printf_i+0x1d2>
 8001168:	0670      	lsls	r0, r6, #25
 800116a:	d5fb      	bpl.n	8001164 <_printf_i+0x1c8>
 800116c:	8019      	strh	r1, [r3, #0]
 800116e:	2300      	movs	r3, #0
 8001170:	6123      	str	r3, [r4, #16]
 8001172:	4615      	mov	r5, r2
 8001174:	e7ba      	b.n	80010ec <_printf_i+0x150>
 8001176:	682b      	ldr	r3, [r5, #0]
 8001178:	1d1a      	adds	r2, r3, #4
 800117a:	602a      	str	r2, [r5, #0]
 800117c:	681d      	ldr	r5, [r3, #0]
 800117e:	6862      	ldr	r2, [r4, #4]
 8001180:	2100      	movs	r1, #0
 8001182:	4628      	mov	r0, r5
 8001184:	f7ff f834 	bl	80001f0 <memchr>
 8001188:	b108      	cbz	r0, 800118e <_printf_i+0x1f2>
 800118a:	1b40      	subs	r0, r0, r5
 800118c:	6060      	str	r0, [r4, #4]
 800118e:	6863      	ldr	r3, [r4, #4]
 8001190:	6123      	str	r3, [r4, #16]
 8001192:	2300      	movs	r3, #0
 8001194:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001198:	e7a8      	b.n	80010ec <_printf_i+0x150>
 800119a:	6923      	ldr	r3, [r4, #16]
 800119c:	462a      	mov	r2, r5
 800119e:	4649      	mov	r1, r9
 80011a0:	4640      	mov	r0, r8
 80011a2:	47d0      	blx	sl
 80011a4:	3001      	adds	r0, #1
 80011a6:	d0ab      	beq.n	8001100 <_printf_i+0x164>
 80011a8:	6823      	ldr	r3, [r4, #0]
 80011aa:	079b      	lsls	r3, r3, #30
 80011ac:	d413      	bmi.n	80011d6 <_printf_i+0x23a>
 80011ae:	68e0      	ldr	r0, [r4, #12]
 80011b0:	9b03      	ldr	r3, [sp, #12]
 80011b2:	4298      	cmp	r0, r3
 80011b4:	bfb8      	it	lt
 80011b6:	4618      	movlt	r0, r3
 80011b8:	e7a4      	b.n	8001104 <_printf_i+0x168>
 80011ba:	2301      	movs	r3, #1
 80011bc:	4632      	mov	r2, r6
 80011be:	4649      	mov	r1, r9
 80011c0:	4640      	mov	r0, r8
 80011c2:	47d0      	blx	sl
 80011c4:	3001      	adds	r0, #1
 80011c6:	d09b      	beq.n	8001100 <_printf_i+0x164>
 80011c8:	3501      	adds	r5, #1
 80011ca:	68e3      	ldr	r3, [r4, #12]
 80011cc:	9903      	ldr	r1, [sp, #12]
 80011ce:	1a5b      	subs	r3, r3, r1
 80011d0:	42ab      	cmp	r3, r5
 80011d2:	dcf2      	bgt.n	80011ba <_printf_i+0x21e>
 80011d4:	e7eb      	b.n	80011ae <_printf_i+0x212>
 80011d6:	2500      	movs	r5, #0
 80011d8:	f104 0619 	add.w	r6, r4, #25
 80011dc:	e7f5      	b.n	80011ca <_printf_i+0x22e>
 80011de:	bf00      	nop
 80011e0:	08001a09 	.word	0x08001a09
 80011e4:	08001a1a 	.word	0x08001a1a

080011e8 <_putc_r>:
 80011e8:	b570      	push	{r4, r5, r6, lr}
 80011ea:	460d      	mov	r5, r1
 80011ec:	4614      	mov	r4, r2
 80011ee:	4606      	mov	r6, r0
 80011f0:	b118      	cbz	r0, 80011fa <_putc_r+0x12>
 80011f2:	6983      	ldr	r3, [r0, #24]
 80011f4:	b90b      	cbnz	r3, 80011fa <_putc_r+0x12>
 80011f6:	f7ff fb6f 	bl	80008d8 <__sinit>
 80011fa:	4b1c      	ldr	r3, [pc, #112]	; (800126c <_putc_r+0x84>)
 80011fc:	429c      	cmp	r4, r3
 80011fe:	d124      	bne.n	800124a <_putc_r+0x62>
 8001200:	6874      	ldr	r4, [r6, #4]
 8001202:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001204:	07d8      	lsls	r0, r3, #31
 8001206:	d405      	bmi.n	8001214 <_putc_r+0x2c>
 8001208:	89a3      	ldrh	r3, [r4, #12]
 800120a:	0599      	lsls	r1, r3, #22
 800120c:	d402      	bmi.n	8001214 <_putc_r+0x2c>
 800120e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001210:	f7ff fc12 	bl	8000a38 <__retarget_lock_acquire_recursive>
 8001214:	68a3      	ldr	r3, [r4, #8]
 8001216:	3b01      	subs	r3, #1
 8001218:	2b00      	cmp	r3, #0
 800121a:	60a3      	str	r3, [r4, #8]
 800121c:	da05      	bge.n	800122a <_putc_r+0x42>
 800121e:	69a2      	ldr	r2, [r4, #24]
 8001220:	4293      	cmp	r3, r2
 8001222:	db1c      	blt.n	800125e <_putc_r+0x76>
 8001224:	b2eb      	uxtb	r3, r5
 8001226:	2b0a      	cmp	r3, #10
 8001228:	d019      	beq.n	800125e <_putc_r+0x76>
 800122a:	6823      	ldr	r3, [r4, #0]
 800122c:	1c5a      	adds	r2, r3, #1
 800122e:	6022      	str	r2, [r4, #0]
 8001230:	701d      	strb	r5, [r3, #0]
 8001232:	b2ed      	uxtb	r5, r5
 8001234:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001236:	07da      	lsls	r2, r3, #31
 8001238:	d405      	bmi.n	8001246 <_putc_r+0x5e>
 800123a:	89a3      	ldrh	r3, [r4, #12]
 800123c:	059b      	lsls	r3, r3, #22
 800123e:	d402      	bmi.n	8001246 <_putc_r+0x5e>
 8001240:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001242:	f7ff fbfa 	bl	8000a3a <__retarget_lock_release_recursive>
 8001246:	4628      	mov	r0, r5
 8001248:	bd70      	pop	{r4, r5, r6, pc}
 800124a:	4b09      	ldr	r3, [pc, #36]	; (8001270 <_putc_r+0x88>)
 800124c:	429c      	cmp	r4, r3
 800124e:	d101      	bne.n	8001254 <_putc_r+0x6c>
 8001250:	68b4      	ldr	r4, [r6, #8]
 8001252:	e7d6      	b.n	8001202 <_putc_r+0x1a>
 8001254:	4b07      	ldr	r3, [pc, #28]	; (8001274 <_putc_r+0x8c>)
 8001256:	429c      	cmp	r4, r3
 8001258:	bf08      	it	eq
 800125a:	68f4      	ldreq	r4, [r6, #12]
 800125c:	e7d1      	b.n	8001202 <_putc_r+0x1a>
 800125e:	4629      	mov	r1, r5
 8001260:	4622      	mov	r2, r4
 8001262:	4630      	mov	r0, r6
 8001264:	f000 f85c 	bl	8001320 <__swbuf_r>
 8001268:	4605      	mov	r5, r0
 800126a:	e7e3      	b.n	8001234 <_putc_r+0x4c>
 800126c:	080019b8 	.word	0x080019b8
 8001270:	080019d8 	.word	0x080019d8
 8001274:	08001998 	.word	0x08001998

08001278 <_sbrk_r>:
 8001278:	b538      	push	{r3, r4, r5, lr}
 800127a:	4d06      	ldr	r5, [pc, #24]	; (8001294 <_sbrk_r+0x1c>)
 800127c:	2300      	movs	r3, #0
 800127e:	4604      	mov	r4, r0
 8001280:	4608      	mov	r0, r1
 8001282:	602b      	str	r3, [r5, #0]
 8001284:	f7ff f9be 	bl	8000604 <_sbrk>
 8001288:	1c43      	adds	r3, r0, #1
 800128a:	d102      	bne.n	8001292 <_sbrk_r+0x1a>
 800128c:	682b      	ldr	r3, [r5, #0]
 800128e:	b103      	cbz	r3, 8001292 <_sbrk_r+0x1a>
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	bd38      	pop	{r3, r4, r5, pc}
 8001294:	200000d8 	.word	0x200000d8

08001298 <__sread>:
 8001298:	b510      	push	{r4, lr}
 800129a:	460c      	mov	r4, r1
 800129c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012a0:	f000 fa6e 	bl	8001780 <_read_r>
 80012a4:	2800      	cmp	r0, #0
 80012a6:	bfab      	itete	ge
 80012a8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80012aa:	89a3      	ldrhlt	r3, [r4, #12]
 80012ac:	181b      	addge	r3, r3, r0
 80012ae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80012b2:	bfac      	ite	ge
 80012b4:	6563      	strge	r3, [r4, #84]	; 0x54
 80012b6:	81a3      	strhlt	r3, [r4, #12]
 80012b8:	bd10      	pop	{r4, pc}

080012ba <__swrite>:
 80012ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012be:	461f      	mov	r7, r3
 80012c0:	898b      	ldrh	r3, [r1, #12]
 80012c2:	05db      	lsls	r3, r3, #23
 80012c4:	4605      	mov	r5, r0
 80012c6:	460c      	mov	r4, r1
 80012c8:	4616      	mov	r6, r2
 80012ca:	d505      	bpl.n	80012d8 <__swrite+0x1e>
 80012cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012d0:	2302      	movs	r3, #2
 80012d2:	2200      	movs	r2, #0
 80012d4:	f000 f9d0 	bl	8001678 <_lseek_r>
 80012d8:	89a3      	ldrh	r3, [r4, #12]
 80012da:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012de:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012e2:	81a3      	strh	r3, [r4, #12]
 80012e4:	4632      	mov	r2, r6
 80012e6:	463b      	mov	r3, r7
 80012e8:	4628      	mov	r0, r5
 80012ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012ee:	f000 b869 	b.w	80013c4 <_write_r>

080012f2 <__sseek>:
 80012f2:	b510      	push	{r4, lr}
 80012f4:	460c      	mov	r4, r1
 80012f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012fa:	f000 f9bd 	bl	8001678 <_lseek_r>
 80012fe:	1c43      	adds	r3, r0, #1
 8001300:	89a3      	ldrh	r3, [r4, #12]
 8001302:	bf15      	itete	ne
 8001304:	6560      	strne	r0, [r4, #84]	; 0x54
 8001306:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800130a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800130e:	81a3      	strheq	r3, [r4, #12]
 8001310:	bf18      	it	ne
 8001312:	81a3      	strhne	r3, [r4, #12]
 8001314:	bd10      	pop	{r4, pc}

08001316 <__sclose>:
 8001316:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800131a:	f000 b8db 	b.w	80014d4 <_close_r>
	...

08001320 <__swbuf_r>:
 8001320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001322:	460e      	mov	r6, r1
 8001324:	4614      	mov	r4, r2
 8001326:	4605      	mov	r5, r0
 8001328:	b118      	cbz	r0, 8001332 <__swbuf_r+0x12>
 800132a:	6983      	ldr	r3, [r0, #24]
 800132c:	b90b      	cbnz	r3, 8001332 <__swbuf_r+0x12>
 800132e:	f7ff fad3 	bl	80008d8 <__sinit>
 8001332:	4b21      	ldr	r3, [pc, #132]	; (80013b8 <__swbuf_r+0x98>)
 8001334:	429c      	cmp	r4, r3
 8001336:	d12b      	bne.n	8001390 <__swbuf_r+0x70>
 8001338:	686c      	ldr	r4, [r5, #4]
 800133a:	69a3      	ldr	r3, [r4, #24]
 800133c:	60a3      	str	r3, [r4, #8]
 800133e:	89a3      	ldrh	r3, [r4, #12]
 8001340:	071a      	lsls	r2, r3, #28
 8001342:	d52f      	bpl.n	80013a4 <__swbuf_r+0x84>
 8001344:	6923      	ldr	r3, [r4, #16]
 8001346:	b36b      	cbz	r3, 80013a4 <__swbuf_r+0x84>
 8001348:	6923      	ldr	r3, [r4, #16]
 800134a:	6820      	ldr	r0, [r4, #0]
 800134c:	1ac0      	subs	r0, r0, r3
 800134e:	6963      	ldr	r3, [r4, #20]
 8001350:	b2f6      	uxtb	r6, r6
 8001352:	4283      	cmp	r3, r0
 8001354:	4637      	mov	r7, r6
 8001356:	dc04      	bgt.n	8001362 <__swbuf_r+0x42>
 8001358:	4621      	mov	r1, r4
 800135a:	4628      	mov	r0, r5
 800135c:	f000 f950 	bl	8001600 <_fflush_r>
 8001360:	bb30      	cbnz	r0, 80013b0 <__swbuf_r+0x90>
 8001362:	68a3      	ldr	r3, [r4, #8]
 8001364:	3b01      	subs	r3, #1
 8001366:	60a3      	str	r3, [r4, #8]
 8001368:	6823      	ldr	r3, [r4, #0]
 800136a:	1c5a      	adds	r2, r3, #1
 800136c:	6022      	str	r2, [r4, #0]
 800136e:	701e      	strb	r6, [r3, #0]
 8001370:	6963      	ldr	r3, [r4, #20]
 8001372:	3001      	adds	r0, #1
 8001374:	4283      	cmp	r3, r0
 8001376:	d004      	beq.n	8001382 <__swbuf_r+0x62>
 8001378:	89a3      	ldrh	r3, [r4, #12]
 800137a:	07db      	lsls	r3, r3, #31
 800137c:	d506      	bpl.n	800138c <__swbuf_r+0x6c>
 800137e:	2e0a      	cmp	r6, #10
 8001380:	d104      	bne.n	800138c <__swbuf_r+0x6c>
 8001382:	4621      	mov	r1, r4
 8001384:	4628      	mov	r0, r5
 8001386:	f000 f93b 	bl	8001600 <_fflush_r>
 800138a:	b988      	cbnz	r0, 80013b0 <__swbuf_r+0x90>
 800138c:	4638      	mov	r0, r7
 800138e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001390:	4b0a      	ldr	r3, [pc, #40]	; (80013bc <__swbuf_r+0x9c>)
 8001392:	429c      	cmp	r4, r3
 8001394:	d101      	bne.n	800139a <__swbuf_r+0x7a>
 8001396:	68ac      	ldr	r4, [r5, #8]
 8001398:	e7cf      	b.n	800133a <__swbuf_r+0x1a>
 800139a:	4b09      	ldr	r3, [pc, #36]	; (80013c0 <__swbuf_r+0xa0>)
 800139c:	429c      	cmp	r4, r3
 800139e:	bf08      	it	eq
 80013a0:	68ec      	ldreq	r4, [r5, #12]
 80013a2:	e7ca      	b.n	800133a <__swbuf_r+0x1a>
 80013a4:	4621      	mov	r1, r4
 80013a6:	4628      	mov	r0, r5
 80013a8:	f000 f81e 	bl	80013e8 <__swsetup_r>
 80013ac:	2800      	cmp	r0, #0
 80013ae:	d0cb      	beq.n	8001348 <__swbuf_r+0x28>
 80013b0:	f04f 37ff 	mov.w	r7, #4294967295
 80013b4:	e7ea      	b.n	800138c <__swbuf_r+0x6c>
 80013b6:	bf00      	nop
 80013b8:	080019b8 	.word	0x080019b8
 80013bc:	080019d8 	.word	0x080019d8
 80013c0:	08001998 	.word	0x08001998

080013c4 <_write_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4d07      	ldr	r5, [pc, #28]	; (80013e4 <_write_r+0x20>)
 80013c8:	4604      	mov	r4, r0
 80013ca:	4608      	mov	r0, r1
 80013cc:	4611      	mov	r1, r2
 80013ce:	2200      	movs	r2, #0
 80013d0:	602a      	str	r2, [r5, #0]
 80013d2:	461a      	mov	r2, r3
 80013d4:	f7ff f8c5 	bl	8000562 <_write>
 80013d8:	1c43      	adds	r3, r0, #1
 80013da:	d102      	bne.n	80013e2 <_write_r+0x1e>
 80013dc:	682b      	ldr	r3, [r5, #0]
 80013de:	b103      	cbz	r3, 80013e2 <_write_r+0x1e>
 80013e0:	6023      	str	r3, [r4, #0]
 80013e2:	bd38      	pop	{r3, r4, r5, pc}
 80013e4:	200000d8 	.word	0x200000d8

080013e8 <__swsetup_r>:
 80013e8:	4b32      	ldr	r3, [pc, #200]	; (80014b4 <__swsetup_r+0xcc>)
 80013ea:	b570      	push	{r4, r5, r6, lr}
 80013ec:	681d      	ldr	r5, [r3, #0]
 80013ee:	4606      	mov	r6, r0
 80013f0:	460c      	mov	r4, r1
 80013f2:	b125      	cbz	r5, 80013fe <__swsetup_r+0x16>
 80013f4:	69ab      	ldr	r3, [r5, #24]
 80013f6:	b913      	cbnz	r3, 80013fe <__swsetup_r+0x16>
 80013f8:	4628      	mov	r0, r5
 80013fa:	f7ff fa6d 	bl	80008d8 <__sinit>
 80013fe:	4b2e      	ldr	r3, [pc, #184]	; (80014b8 <__swsetup_r+0xd0>)
 8001400:	429c      	cmp	r4, r3
 8001402:	d10f      	bne.n	8001424 <__swsetup_r+0x3c>
 8001404:	686c      	ldr	r4, [r5, #4]
 8001406:	89a3      	ldrh	r3, [r4, #12]
 8001408:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800140c:	0719      	lsls	r1, r3, #28
 800140e:	d42c      	bmi.n	800146a <__swsetup_r+0x82>
 8001410:	06dd      	lsls	r5, r3, #27
 8001412:	d411      	bmi.n	8001438 <__swsetup_r+0x50>
 8001414:	2309      	movs	r3, #9
 8001416:	6033      	str	r3, [r6, #0]
 8001418:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800141c:	81a3      	strh	r3, [r4, #12]
 800141e:	f04f 30ff 	mov.w	r0, #4294967295
 8001422:	e03e      	b.n	80014a2 <__swsetup_r+0xba>
 8001424:	4b25      	ldr	r3, [pc, #148]	; (80014bc <__swsetup_r+0xd4>)
 8001426:	429c      	cmp	r4, r3
 8001428:	d101      	bne.n	800142e <__swsetup_r+0x46>
 800142a:	68ac      	ldr	r4, [r5, #8]
 800142c:	e7eb      	b.n	8001406 <__swsetup_r+0x1e>
 800142e:	4b24      	ldr	r3, [pc, #144]	; (80014c0 <__swsetup_r+0xd8>)
 8001430:	429c      	cmp	r4, r3
 8001432:	bf08      	it	eq
 8001434:	68ec      	ldreq	r4, [r5, #12]
 8001436:	e7e6      	b.n	8001406 <__swsetup_r+0x1e>
 8001438:	0758      	lsls	r0, r3, #29
 800143a:	d512      	bpl.n	8001462 <__swsetup_r+0x7a>
 800143c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800143e:	b141      	cbz	r1, 8001452 <__swsetup_r+0x6a>
 8001440:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001444:	4299      	cmp	r1, r3
 8001446:	d002      	beq.n	800144e <__swsetup_r+0x66>
 8001448:	4630      	mov	r0, r6
 800144a:	f7ff faff 	bl	8000a4c <_free_r>
 800144e:	2300      	movs	r3, #0
 8001450:	6363      	str	r3, [r4, #52]	; 0x34
 8001452:	89a3      	ldrh	r3, [r4, #12]
 8001454:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001458:	81a3      	strh	r3, [r4, #12]
 800145a:	2300      	movs	r3, #0
 800145c:	6063      	str	r3, [r4, #4]
 800145e:	6923      	ldr	r3, [r4, #16]
 8001460:	6023      	str	r3, [r4, #0]
 8001462:	89a3      	ldrh	r3, [r4, #12]
 8001464:	f043 0308 	orr.w	r3, r3, #8
 8001468:	81a3      	strh	r3, [r4, #12]
 800146a:	6923      	ldr	r3, [r4, #16]
 800146c:	b94b      	cbnz	r3, 8001482 <__swsetup_r+0x9a>
 800146e:	89a3      	ldrh	r3, [r4, #12]
 8001470:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001474:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001478:	d003      	beq.n	8001482 <__swsetup_r+0x9a>
 800147a:	4621      	mov	r1, r4
 800147c:	4630      	mov	r0, r6
 800147e:	f000 f933 	bl	80016e8 <__smakebuf_r>
 8001482:	89a0      	ldrh	r0, [r4, #12]
 8001484:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001488:	f010 0301 	ands.w	r3, r0, #1
 800148c:	d00a      	beq.n	80014a4 <__swsetup_r+0xbc>
 800148e:	2300      	movs	r3, #0
 8001490:	60a3      	str	r3, [r4, #8]
 8001492:	6963      	ldr	r3, [r4, #20]
 8001494:	425b      	negs	r3, r3
 8001496:	61a3      	str	r3, [r4, #24]
 8001498:	6923      	ldr	r3, [r4, #16]
 800149a:	b943      	cbnz	r3, 80014ae <__swsetup_r+0xc6>
 800149c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80014a0:	d1ba      	bne.n	8001418 <__swsetup_r+0x30>
 80014a2:	bd70      	pop	{r4, r5, r6, pc}
 80014a4:	0781      	lsls	r1, r0, #30
 80014a6:	bf58      	it	pl
 80014a8:	6963      	ldrpl	r3, [r4, #20]
 80014aa:	60a3      	str	r3, [r4, #8]
 80014ac:	e7f4      	b.n	8001498 <__swsetup_r+0xb0>
 80014ae:	2000      	movs	r0, #0
 80014b0:	e7f7      	b.n	80014a2 <__swsetup_r+0xba>
 80014b2:	bf00      	nop
 80014b4:	20000048 	.word	0x20000048
 80014b8:	080019b8 	.word	0x080019b8
 80014bc:	080019d8 	.word	0x080019d8
 80014c0:	08001998 	.word	0x08001998

080014c4 <abort>:
 80014c4:	b508      	push	{r3, lr}
 80014c6:	2006      	movs	r0, #6
 80014c8:	f000 f994 	bl	80017f4 <raise>
 80014cc:	2001      	movs	r0, #1
 80014ce:	f7ff f821 	bl	8000514 <_exit>
	...

080014d4 <_close_r>:
 80014d4:	b538      	push	{r3, r4, r5, lr}
 80014d6:	4d06      	ldr	r5, [pc, #24]	; (80014f0 <_close_r+0x1c>)
 80014d8:	2300      	movs	r3, #0
 80014da:	4604      	mov	r4, r0
 80014dc:	4608      	mov	r0, r1
 80014de:	602b      	str	r3, [r5, #0]
 80014e0:	f7ff f85b 	bl	800059a <_close>
 80014e4:	1c43      	adds	r3, r0, #1
 80014e6:	d102      	bne.n	80014ee <_close_r+0x1a>
 80014e8:	682b      	ldr	r3, [r5, #0]
 80014ea:	b103      	cbz	r3, 80014ee <_close_r+0x1a>
 80014ec:	6023      	str	r3, [r4, #0]
 80014ee:	bd38      	pop	{r3, r4, r5, pc}
 80014f0:	200000d8 	.word	0x200000d8

080014f4 <__sflush_r>:
 80014f4:	898a      	ldrh	r2, [r1, #12]
 80014f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014fa:	4605      	mov	r5, r0
 80014fc:	0710      	lsls	r0, r2, #28
 80014fe:	460c      	mov	r4, r1
 8001500:	d458      	bmi.n	80015b4 <__sflush_r+0xc0>
 8001502:	684b      	ldr	r3, [r1, #4]
 8001504:	2b00      	cmp	r3, #0
 8001506:	dc05      	bgt.n	8001514 <__sflush_r+0x20>
 8001508:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800150a:	2b00      	cmp	r3, #0
 800150c:	dc02      	bgt.n	8001514 <__sflush_r+0x20>
 800150e:	2000      	movs	r0, #0
 8001510:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001514:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001516:	2e00      	cmp	r6, #0
 8001518:	d0f9      	beq.n	800150e <__sflush_r+0x1a>
 800151a:	2300      	movs	r3, #0
 800151c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001520:	682f      	ldr	r7, [r5, #0]
 8001522:	602b      	str	r3, [r5, #0]
 8001524:	d032      	beq.n	800158c <__sflush_r+0x98>
 8001526:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001528:	89a3      	ldrh	r3, [r4, #12]
 800152a:	075a      	lsls	r2, r3, #29
 800152c:	d505      	bpl.n	800153a <__sflush_r+0x46>
 800152e:	6863      	ldr	r3, [r4, #4]
 8001530:	1ac0      	subs	r0, r0, r3
 8001532:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001534:	b10b      	cbz	r3, 800153a <__sflush_r+0x46>
 8001536:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001538:	1ac0      	subs	r0, r0, r3
 800153a:	2300      	movs	r3, #0
 800153c:	4602      	mov	r2, r0
 800153e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001540:	6a21      	ldr	r1, [r4, #32]
 8001542:	4628      	mov	r0, r5
 8001544:	47b0      	blx	r6
 8001546:	1c43      	adds	r3, r0, #1
 8001548:	89a3      	ldrh	r3, [r4, #12]
 800154a:	d106      	bne.n	800155a <__sflush_r+0x66>
 800154c:	6829      	ldr	r1, [r5, #0]
 800154e:	291d      	cmp	r1, #29
 8001550:	d82c      	bhi.n	80015ac <__sflush_r+0xb8>
 8001552:	4a2a      	ldr	r2, [pc, #168]	; (80015fc <__sflush_r+0x108>)
 8001554:	40ca      	lsrs	r2, r1
 8001556:	07d6      	lsls	r6, r2, #31
 8001558:	d528      	bpl.n	80015ac <__sflush_r+0xb8>
 800155a:	2200      	movs	r2, #0
 800155c:	6062      	str	r2, [r4, #4]
 800155e:	04d9      	lsls	r1, r3, #19
 8001560:	6922      	ldr	r2, [r4, #16]
 8001562:	6022      	str	r2, [r4, #0]
 8001564:	d504      	bpl.n	8001570 <__sflush_r+0x7c>
 8001566:	1c42      	adds	r2, r0, #1
 8001568:	d101      	bne.n	800156e <__sflush_r+0x7a>
 800156a:	682b      	ldr	r3, [r5, #0]
 800156c:	b903      	cbnz	r3, 8001570 <__sflush_r+0x7c>
 800156e:	6560      	str	r0, [r4, #84]	; 0x54
 8001570:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001572:	602f      	str	r7, [r5, #0]
 8001574:	2900      	cmp	r1, #0
 8001576:	d0ca      	beq.n	800150e <__sflush_r+0x1a>
 8001578:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800157c:	4299      	cmp	r1, r3
 800157e:	d002      	beq.n	8001586 <__sflush_r+0x92>
 8001580:	4628      	mov	r0, r5
 8001582:	f7ff fa63 	bl	8000a4c <_free_r>
 8001586:	2000      	movs	r0, #0
 8001588:	6360      	str	r0, [r4, #52]	; 0x34
 800158a:	e7c1      	b.n	8001510 <__sflush_r+0x1c>
 800158c:	6a21      	ldr	r1, [r4, #32]
 800158e:	2301      	movs	r3, #1
 8001590:	4628      	mov	r0, r5
 8001592:	47b0      	blx	r6
 8001594:	1c41      	adds	r1, r0, #1
 8001596:	d1c7      	bne.n	8001528 <__sflush_r+0x34>
 8001598:	682b      	ldr	r3, [r5, #0]
 800159a:	2b00      	cmp	r3, #0
 800159c:	d0c4      	beq.n	8001528 <__sflush_r+0x34>
 800159e:	2b1d      	cmp	r3, #29
 80015a0:	d001      	beq.n	80015a6 <__sflush_r+0xb2>
 80015a2:	2b16      	cmp	r3, #22
 80015a4:	d101      	bne.n	80015aa <__sflush_r+0xb6>
 80015a6:	602f      	str	r7, [r5, #0]
 80015a8:	e7b1      	b.n	800150e <__sflush_r+0x1a>
 80015aa:	89a3      	ldrh	r3, [r4, #12]
 80015ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015b0:	81a3      	strh	r3, [r4, #12]
 80015b2:	e7ad      	b.n	8001510 <__sflush_r+0x1c>
 80015b4:	690f      	ldr	r7, [r1, #16]
 80015b6:	2f00      	cmp	r7, #0
 80015b8:	d0a9      	beq.n	800150e <__sflush_r+0x1a>
 80015ba:	0793      	lsls	r3, r2, #30
 80015bc:	680e      	ldr	r6, [r1, #0]
 80015be:	bf08      	it	eq
 80015c0:	694b      	ldreq	r3, [r1, #20]
 80015c2:	600f      	str	r7, [r1, #0]
 80015c4:	bf18      	it	ne
 80015c6:	2300      	movne	r3, #0
 80015c8:	eba6 0807 	sub.w	r8, r6, r7
 80015cc:	608b      	str	r3, [r1, #8]
 80015ce:	f1b8 0f00 	cmp.w	r8, #0
 80015d2:	dd9c      	ble.n	800150e <__sflush_r+0x1a>
 80015d4:	6a21      	ldr	r1, [r4, #32]
 80015d6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015d8:	4643      	mov	r3, r8
 80015da:	463a      	mov	r2, r7
 80015dc:	4628      	mov	r0, r5
 80015de:	47b0      	blx	r6
 80015e0:	2800      	cmp	r0, #0
 80015e2:	dc06      	bgt.n	80015f2 <__sflush_r+0xfe>
 80015e4:	89a3      	ldrh	r3, [r4, #12]
 80015e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015ea:	81a3      	strh	r3, [r4, #12]
 80015ec:	f04f 30ff 	mov.w	r0, #4294967295
 80015f0:	e78e      	b.n	8001510 <__sflush_r+0x1c>
 80015f2:	4407      	add	r7, r0
 80015f4:	eba8 0800 	sub.w	r8, r8, r0
 80015f8:	e7e9      	b.n	80015ce <__sflush_r+0xda>
 80015fa:	bf00      	nop
 80015fc:	20400001 	.word	0x20400001

08001600 <_fflush_r>:
 8001600:	b538      	push	{r3, r4, r5, lr}
 8001602:	690b      	ldr	r3, [r1, #16]
 8001604:	4605      	mov	r5, r0
 8001606:	460c      	mov	r4, r1
 8001608:	b913      	cbnz	r3, 8001610 <_fflush_r+0x10>
 800160a:	2500      	movs	r5, #0
 800160c:	4628      	mov	r0, r5
 800160e:	bd38      	pop	{r3, r4, r5, pc}
 8001610:	b118      	cbz	r0, 800161a <_fflush_r+0x1a>
 8001612:	6983      	ldr	r3, [r0, #24]
 8001614:	b90b      	cbnz	r3, 800161a <_fflush_r+0x1a>
 8001616:	f7ff f95f 	bl	80008d8 <__sinit>
 800161a:	4b14      	ldr	r3, [pc, #80]	; (800166c <_fflush_r+0x6c>)
 800161c:	429c      	cmp	r4, r3
 800161e:	d11b      	bne.n	8001658 <_fflush_r+0x58>
 8001620:	686c      	ldr	r4, [r5, #4]
 8001622:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001626:	2b00      	cmp	r3, #0
 8001628:	d0ef      	beq.n	800160a <_fflush_r+0xa>
 800162a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800162c:	07d0      	lsls	r0, r2, #31
 800162e:	d404      	bmi.n	800163a <_fflush_r+0x3a>
 8001630:	0599      	lsls	r1, r3, #22
 8001632:	d402      	bmi.n	800163a <_fflush_r+0x3a>
 8001634:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001636:	f7ff f9ff 	bl	8000a38 <__retarget_lock_acquire_recursive>
 800163a:	4628      	mov	r0, r5
 800163c:	4621      	mov	r1, r4
 800163e:	f7ff ff59 	bl	80014f4 <__sflush_r>
 8001642:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001644:	07da      	lsls	r2, r3, #31
 8001646:	4605      	mov	r5, r0
 8001648:	d4e0      	bmi.n	800160c <_fflush_r+0xc>
 800164a:	89a3      	ldrh	r3, [r4, #12]
 800164c:	059b      	lsls	r3, r3, #22
 800164e:	d4dd      	bmi.n	800160c <_fflush_r+0xc>
 8001650:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001652:	f7ff f9f2 	bl	8000a3a <__retarget_lock_release_recursive>
 8001656:	e7d9      	b.n	800160c <_fflush_r+0xc>
 8001658:	4b05      	ldr	r3, [pc, #20]	; (8001670 <_fflush_r+0x70>)
 800165a:	429c      	cmp	r4, r3
 800165c:	d101      	bne.n	8001662 <_fflush_r+0x62>
 800165e:	68ac      	ldr	r4, [r5, #8]
 8001660:	e7df      	b.n	8001622 <_fflush_r+0x22>
 8001662:	4b04      	ldr	r3, [pc, #16]	; (8001674 <_fflush_r+0x74>)
 8001664:	429c      	cmp	r4, r3
 8001666:	bf08      	it	eq
 8001668:	68ec      	ldreq	r4, [r5, #12]
 800166a:	e7da      	b.n	8001622 <_fflush_r+0x22>
 800166c:	080019b8 	.word	0x080019b8
 8001670:	080019d8 	.word	0x080019d8
 8001674:	08001998 	.word	0x08001998

08001678 <_lseek_r>:
 8001678:	b538      	push	{r3, r4, r5, lr}
 800167a:	4d07      	ldr	r5, [pc, #28]	; (8001698 <_lseek_r+0x20>)
 800167c:	4604      	mov	r4, r0
 800167e:	4608      	mov	r0, r1
 8001680:	4611      	mov	r1, r2
 8001682:	2200      	movs	r2, #0
 8001684:	602a      	str	r2, [r5, #0]
 8001686:	461a      	mov	r2, r3
 8001688:	f7fe ffae 	bl	80005e8 <_lseek>
 800168c:	1c43      	adds	r3, r0, #1
 800168e:	d102      	bne.n	8001696 <_lseek_r+0x1e>
 8001690:	682b      	ldr	r3, [r5, #0]
 8001692:	b103      	cbz	r3, 8001696 <_lseek_r+0x1e>
 8001694:	6023      	str	r3, [r4, #0]
 8001696:	bd38      	pop	{r3, r4, r5, pc}
 8001698:	200000d8 	.word	0x200000d8

0800169c <__swhatbuf_r>:
 800169c:	b570      	push	{r4, r5, r6, lr}
 800169e:	460e      	mov	r6, r1
 80016a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80016a4:	2900      	cmp	r1, #0
 80016a6:	b096      	sub	sp, #88	; 0x58
 80016a8:	4614      	mov	r4, r2
 80016aa:	461d      	mov	r5, r3
 80016ac:	da08      	bge.n	80016c0 <__swhatbuf_r+0x24>
 80016ae:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80016b2:	2200      	movs	r2, #0
 80016b4:	602a      	str	r2, [r5, #0]
 80016b6:	061a      	lsls	r2, r3, #24
 80016b8:	d410      	bmi.n	80016dc <__swhatbuf_r+0x40>
 80016ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016be:	e00e      	b.n	80016de <__swhatbuf_r+0x42>
 80016c0:	466a      	mov	r2, sp
 80016c2:	f000 f8b3 	bl	800182c <_fstat_r>
 80016c6:	2800      	cmp	r0, #0
 80016c8:	dbf1      	blt.n	80016ae <__swhatbuf_r+0x12>
 80016ca:	9a01      	ldr	r2, [sp, #4]
 80016cc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80016d0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80016d4:	425a      	negs	r2, r3
 80016d6:	415a      	adcs	r2, r3
 80016d8:	602a      	str	r2, [r5, #0]
 80016da:	e7ee      	b.n	80016ba <__swhatbuf_r+0x1e>
 80016dc:	2340      	movs	r3, #64	; 0x40
 80016de:	2000      	movs	r0, #0
 80016e0:	6023      	str	r3, [r4, #0]
 80016e2:	b016      	add	sp, #88	; 0x58
 80016e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080016e8 <__smakebuf_r>:
 80016e8:	898b      	ldrh	r3, [r1, #12]
 80016ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80016ec:	079d      	lsls	r5, r3, #30
 80016ee:	4606      	mov	r6, r0
 80016f0:	460c      	mov	r4, r1
 80016f2:	d507      	bpl.n	8001704 <__smakebuf_r+0x1c>
 80016f4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80016f8:	6023      	str	r3, [r4, #0]
 80016fa:	6123      	str	r3, [r4, #16]
 80016fc:	2301      	movs	r3, #1
 80016fe:	6163      	str	r3, [r4, #20]
 8001700:	b002      	add	sp, #8
 8001702:	bd70      	pop	{r4, r5, r6, pc}
 8001704:	ab01      	add	r3, sp, #4
 8001706:	466a      	mov	r2, sp
 8001708:	f7ff ffc8 	bl	800169c <__swhatbuf_r>
 800170c:	9900      	ldr	r1, [sp, #0]
 800170e:	4605      	mov	r5, r0
 8001710:	4630      	mov	r0, r6
 8001712:	f7ff fa07 	bl	8000b24 <_malloc_r>
 8001716:	b948      	cbnz	r0, 800172c <__smakebuf_r+0x44>
 8001718:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800171c:	059a      	lsls	r2, r3, #22
 800171e:	d4ef      	bmi.n	8001700 <__smakebuf_r+0x18>
 8001720:	f023 0303 	bic.w	r3, r3, #3
 8001724:	f043 0302 	orr.w	r3, r3, #2
 8001728:	81a3      	strh	r3, [r4, #12]
 800172a:	e7e3      	b.n	80016f4 <__smakebuf_r+0xc>
 800172c:	4b0d      	ldr	r3, [pc, #52]	; (8001764 <__smakebuf_r+0x7c>)
 800172e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001730:	89a3      	ldrh	r3, [r4, #12]
 8001732:	6020      	str	r0, [r4, #0]
 8001734:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001738:	81a3      	strh	r3, [r4, #12]
 800173a:	9b00      	ldr	r3, [sp, #0]
 800173c:	6163      	str	r3, [r4, #20]
 800173e:	9b01      	ldr	r3, [sp, #4]
 8001740:	6120      	str	r0, [r4, #16]
 8001742:	b15b      	cbz	r3, 800175c <__smakebuf_r+0x74>
 8001744:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001748:	4630      	mov	r0, r6
 800174a:	f000 f881 	bl	8001850 <_isatty_r>
 800174e:	b128      	cbz	r0, 800175c <__smakebuf_r+0x74>
 8001750:	89a3      	ldrh	r3, [r4, #12]
 8001752:	f023 0303 	bic.w	r3, r3, #3
 8001756:	f043 0301 	orr.w	r3, r3, #1
 800175a:	81a3      	strh	r3, [r4, #12]
 800175c:	89a0      	ldrh	r0, [r4, #12]
 800175e:	4305      	orrs	r5, r0
 8001760:	81a5      	strh	r5, [r4, #12]
 8001762:	e7cd      	b.n	8001700 <__smakebuf_r+0x18>
 8001764:	08000871 	.word	0x08000871

08001768 <__malloc_lock>:
 8001768:	4801      	ldr	r0, [pc, #4]	; (8001770 <__malloc_lock+0x8>)
 800176a:	f7ff b965 	b.w	8000a38 <__retarget_lock_acquire_recursive>
 800176e:	bf00      	nop
 8001770:	200000cc 	.word	0x200000cc

08001774 <__malloc_unlock>:
 8001774:	4801      	ldr	r0, [pc, #4]	; (800177c <__malloc_unlock+0x8>)
 8001776:	f7ff b960 	b.w	8000a3a <__retarget_lock_release_recursive>
 800177a:	bf00      	nop
 800177c:	200000cc 	.word	0x200000cc

08001780 <_read_r>:
 8001780:	b538      	push	{r3, r4, r5, lr}
 8001782:	4d07      	ldr	r5, [pc, #28]	; (80017a0 <_read_r+0x20>)
 8001784:	4604      	mov	r4, r0
 8001786:	4608      	mov	r0, r1
 8001788:	4611      	mov	r1, r2
 800178a:	2200      	movs	r2, #0
 800178c:	602a      	str	r2, [r5, #0]
 800178e:	461a      	mov	r2, r3
 8001790:	f7fe feca 	bl	8000528 <_read>
 8001794:	1c43      	adds	r3, r0, #1
 8001796:	d102      	bne.n	800179e <_read_r+0x1e>
 8001798:	682b      	ldr	r3, [r5, #0]
 800179a:	b103      	cbz	r3, 800179e <_read_r+0x1e>
 800179c:	6023      	str	r3, [r4, #0]
 800179e:	bd38      	pop	{r3, r4, r5, pc}
 80017a0:	200000d8 	.word	0x200000d8

080017a4 <_raise_r>:
 80017a4:	291f      	cmp	r1, #31
 80017a6:	b538      	push	{r3, r4, r5, lr}
 80017a8:	4604      	mov	r4, r0
 80017aa:	460d      	mov	r5, r1
 80017ac:	d904      	bls.n	80017b8 <_raise_r+0x14>
 80017ae:	2316      	movs	r3, #22
 80017b0:	6003      	str	r3, [r0, #0]
 80017b2:	f04f 30ff 	mov.w	r0, #4294967295
 80017b6:	bd38      	pop	{r3, r4, r5, pc}
 80017b8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80017ba:	b112      	cbz	r2, 80017c2 <_raise_r+0x1e>
 80017bc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80017c0:	b94b      	cbnz	r3, 80017d6 <_raise_r+0x32>
 80017c2:	4620      	mov	r0, r4
 80017c4:	f000 f830 	bl	8001828 <_getpid_r>
 80017c8:	462a      	mov	r2, r5
 80017ca:	4601      	mov	r1, r0
 80017cc:	4620      	mov	r0, r4
 80017ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80017d2:	f000 b817 	b.w	8001804 <_kill_r>
 80017d6:	2b01      	cmp	r3, #1
 80017d8:	d00a      	beq.n	80017f0 <_raise_r+0x4c>
 80017da:	1c59      	adds	r1, r3, #1
 80017dc:	d103      	bne.n	80017e6 <_raise_r+0x42>
 80017de:	2316      	movs	r3, #22
 80017e0:	6003      	str	r3, [r0, #0]
 80017e2:	2001      	movs	r0, #1
 80017e4:	e7e7      	b.n	80017b6 <_raise_r+0x12>
 80017e6:	2400      	movs	r4, #0
 80017e8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80017ec:	4628      	mov	r0, r5
 80017ee:	4798      	blx	r3
 80017f0:	2000      	movs	r0, #0
 80017f2:	e7e0      	b.n	80017b6 <_raise_r+0x12>

080017f4 <raise>:
 80017f4:	4b02      	ldr	r3, [pc, #8]	; (8001800 <raise+0xc>)
 80017f6:	4601      	mov	r1, r0
 80017f8:	6818      	ldr	r0, [r3, #0]
 80017fa:	f7ff bfd3 	b.w	80017a4 <_raise_r>
 80017fe:	bf00      	nop
 8001800:	20000048 	.word	0x20000048

08001804 <_kill_r>:
 8001804:	b538      	push	{r3, r4, r5, lr}
 8001806:	4d07      	ldr	r5, [pc, #28]	; (8001824 <_kill_r+0x20>)
 8001808:	2300      	movs	r3, #0
 800180a:	4604      	mov	r4, r0
 800180c:	4608      	mov	r0, r1
 800180e:	4611      	mov	r1, r2
 8001810:	602b      	str	r3, [r5, #0]
 8001812:	f7fe fe6f 	bl	80004f4 <_kill>
 8001816:	1c43      	adds	r3, r0, #1
 8001818:	d102      	bne.n	8001820 <_kill_r+0x1c>
 800181a:	682b      	ldr	r3, [r5, #0]
 800181c:	b103      	cbz	r3, 8001820 <_kill_r+0x1c>
 800181e:	6023      	str	r3, [r4, #0]
 8001820:	bd38      	pop	{r3, r4, r5, pc}
 8001822:	bf00      	nop
 8001824:	200000d8 	.word	0x200000d8

08001828 <_getpid_r>:
 8001828:	f7fe be5c 	b.w	80004e4 <_getpid>

0800182c <_fstat_r>:
 800182c:	b538      	push	{r3, r4, r5, lr}
 800182e:	4d07      	ldr	r5, [pc, #28]	; (800184c <_fstat_r+0x20>)
 8001830:	2300      	movs	r3, #0
 8001832:	4604      	mov	r4, r0
 8001834:	4608      	mov	r0, r1
 8001836:	4611      	mov	r1, r2
 8001838:	602b      	str	r3, [r5, #0]
 800183a:	f7fe feba 	bl	80005b2 <_fstat>
 800183e:	1c43      	adds	r3, r0, #1
 8001840:	d102      	bne.n	8001848 <_fstat_r+0x1c>
 8001842:	682b      	ldr	r3, [r5, #0]
 8001844:	b103      	cbz	r3, 8001848 <_fstat_r+0x1c>
 8001846:	6023      	str	r3, [r4, #0]
 8001848:	bd38      	pop	{r3, r4, r5, pc}
 800184a:	bf00      	nop
 800184c:	200000d8 	.word	0x200000d8

08001850 <_isatty_r>:
 8001850:	b538      	push	{r3, r4, r5, lr}
 8001852:	4d06      	ldr	r5, [pc, #24]	; (800186c <_isatty_r+0x1c>)
 8001854:	2300      	movs	r3, #0
 8001856:	4604      	mov	r4, r0
 8001858:	4608      	mov	r0, r1
 800185a:	602b      	str	r3, [r5, #0]
 800185c:	f7fe feb9 	bl	80005d2 <_isatty>
 8001860:	1c43      	adds	r3, r0, #1
 8001862:	d102      	bne.n	800186a <_isatty_r+0x1a>
 8001864:	682b      	ldr	r3, [r5, #0]
 8001866:	b103      	cbz	r3, 800186a <_isatty_r+0x1a>
 8001868:	6023      	str	r3, [r4, #0]
 800186a:	bd38      	pop	{r3, r4, r5, pc}
 800186c:	200000d8 	.word	0x200000d8

08001870 <_init>:
 8001870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001872:	bf00      	nop
 8001874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001876:	bc08      	pop	{r3}
 8001878:	469e      	mov	lr, r3
 800187a:	4770      	bx	lr

0800187c <_fini>:
 800187c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800187e:	bf00      	nop
 8001880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001882:	bc08      	pop	{r3}
 8001884:	469e      	mov	lr, r3
 8001886:	4770      	bx	lr
